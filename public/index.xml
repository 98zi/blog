<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>子舒的博客</title>
    <link>/</link>
    <description>Recent content on 子舒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 02 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>子舒周刊 -25 | 拉曼恰的风车</title>
      <link>/blog/weekly-25.html/</link>
      <pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-25.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
西班牙骑士的“劲敌”卡斯蒂利亚 - 拉曼恰的风车
1.Screenzy - 截图美化 https://screenzy.io/
写博客或者分享截图的时候，可以用来美化图片</description>
    </item>
    
    <item>
      <title>子舒周刊 -24 | 黄山风景</title>
      <link>/blog/weekly-24.html/</link>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-24.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
来自一位叫做 @洋洋 的网友拍摄的黄山，如诗如画，彷佛中梦中走来的景象。
1.Notepads 文本编辑器 https://github.com/0x7c13/Notepads
具有简约设计的现代轻量级文本编辑器，对标 windows txt 文档。</description>
    </item>
    
    <item>
      <title>子舒周刊 -23 | 粉色城堡</title>
      <link>/blog/weekly-23.html/</link>
      <pubDate>Thu, 19 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-23.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
在骑行过程中发现的一处风景，非常可爱的城堡，外表为粉色，很吸引女孩子前往游玩，位于杭州滨江浦沿。
1.V2EX Polish https://www.v2p.app/
专为 V2EX 用户设计的浏览器插件，集合了众多实用功能，让原生页面焕然一新！
2.MarkDownload - Markdown Web Clipper https://chromewebstore.</description>
    </item>
    
    <item>
      <title>子舒周刊 -22 | 可爱的猫</title>
      <link>/blog/weekly-22.html/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-22.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
来自推特帖子，可爱的小猫在机箱中玩耍。
1.ChatPdf / Sider 谷歌插件 https://sider.ai/chatpdf/
带有 Vision 的 ChatGPT 侧边栏，让 AI 帮你读 PDF！将 PDF 变为你的聊天机器人！</description>
    </item>
    
    <item>
      <title>五丰岛骑行</title>
      <link>/blog/210.html/</link>
      <pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/210.html/</guid>
      <description>不出意外的，今天天气很好，约了个小伙伴一起出来骑行。目的地五丰岛，沿着滨江绿道一路至吴家渡口。
不过岛比较小，找了家面馆吃了午饭后，沿着小岛绕了一圈。时间还早，继续行至湘湖，平时我只在晚上去过，基本没有白天来湘湖，没想到这么热闹，很多人摊了个野餐布在草地休息，还好很多拍婚纱照的，比较好玩就多呆了会。
今日刷里程 60 公里。</description>
    </item>
    
    <item>
      <title>子舒周刊 -21 | 湘湖度假</title>
      <link>/blog/weekly-21.html/</link>
      <pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-21.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
国庆在湘湖骑行，看着来往休息的人群，非常多拍婚纱照的人。
&amp;ldquo;判断什么事情该做，有两个标准。
第一，做的时候喜欢、快乐，做了以后一定不会后悔的事情。第二，做的时候未必喜欢、快乐，但不做一定会后悔的事情。有这两个标准基本就够了，而且它们很好掌握。&amp;rdquo;
&amp;ldquo;There are two criteria for judging what should be done.</description>
    </item>
    
    <item>
      <title>翁金线骑行</title>
      <link>/blog/209.html/</link>
      <pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/209.html/</guid>
      <description>国庆与中秋连在一起放假了，可以出去散散心，从杭州出发一路骑行翁金线，至观潮胜地公园，位于嘉兴海宁，全程将近 70 公里。
整体的感受就是非常爽，前半程因为钱塘江大潮的缘故，游客非常之多，路上来来回回都是人，安全起见不敢骑太快，后半程才放开身心，享受骑车的乐趣和沿途的风景。
回家的路上碰到两个骑友和我的路线一致，便结伴而行，一边聊天一边刷里程，也是非常畅快。
路过堤坝，见到了潮水过去渔民捕鱼的景象。
翁金线是个好地方，期待下一次和朋友继续去骑行游玩！</description>
    </item>
    
    <item>
      <title>子舒周刊 -20 | 亚运灯光</title>
      <link>/blog/weekly-20.html/</link>
      <pubDate>Fri, 22 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-20.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
在钱塘江北岸遥望。
1.Whois 查询 https://who.cx/
一个美观的 Whois 查询网站，加载速度很快，可以识别备案域名。
2.excalidraw 画板 https://excalidraw.</description>
    </item>
    
    <item>
      <title>chrome117 版本隐藏所有标签按钮</title>
      <link>/blog/208.html/</link>
      <pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/208.html/</guid>
      <description>chrome117 版本更新后标签栏多了一个【所有标签】按钮，相当别扭，通过设置可以隐藏。
浏览器输入 url: chrome://flags/#power-bookmarks-side-panel
改成 Disabled 重启浏览器即可。</description>
    </item>
    
    <item>
      <title>夜游钱塘</title>
      <link>/blog/207.html/</link>
      <pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/207.html/</guid>
      <description>和小伙伴绕着江边骑行，欣赏了“大莲花”亚运会主场馆，杭州之门地标。</description>
    </item>
    
    <item>
      <title>远程工具 RustDesk 安装流程</title>
      <link>/blog/206.html/</link>
      <pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/206.html/</guid>
      <description>RustDesk 是一款功能齐全的远程桌面应用，支持 Windows、macOS、Linux、iOS、Android、Web 等多个平台。支持 VP8 / VP9 / AV1 软件编解码器和 H264 / H265 硬件编解码器。完全掌控数据，轻松自建。P2P 连接，端到端加密。在 Windows 上可以非管理员不安装运行，根据需要在本地或远程提升权限。</description>
    </item>
    
    <item>
      <title>国产代码编辑器何愁不崛起</title>
      <link>/blog/205.html/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/205.html/</guid>
      <description>相关文献：
https://cecide.digitalgd.com.cn/monorepo/app-front/home http://www.gd.gov.cn/gdywdt/dsdt/content/post_4205291.html 今天摸鱼发现了一个神奇的东西，CEC-IDE。
据说是：“国内首款适配国产操作系统、自主可控的集成开发环境工具 CEC-IDE”，在某网站有官方资料说明。
下载了一下打算瞅瞅，嚯！前端程序员对这个应该都不陌生 （除了不认识左上角的 logo）
随着深入了解，又发现了一个有意思的地方， 国产代码编辑器安装完第一步，官网文档教你怎么切换成中文模式。</description>
    </item>
    
    <item>
      <title>湘湖小隐团建</title>
      <link>/blog/204.html/</link>
      <pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/204.html/</guid>
      <description>游湖拍摄了几张照片。</description>
    </item>
    
    <item>
      <title>Bitwarden / Vaultwarden 密码管理工具</title>
      <link>/blog/203.html/</link>
      <pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/203.html/</guid>
      <description>1.介绍 Bitwarden 是一款自由且开源的密码管理服务，用户可在加密的保管库中存储敏感信息。Bitwarden 平台提供有多种客户端应用程序，包括网页用户界面、桌面应用，浏览器扩展、移动应用以及命令行界面。Bitwarden 提供云端托管服务，并支持自行部署解决方案。
在调研一些市面常用的密码管理工具之后，我选择了 Bitwarden。然后使用自托管的方式部署在服务器上，定时备份数据库，导出密码，安全性也有保证。
https://bitwarden.com/
而 Vaultwarden 是一个使用 Rust 编写的非官方 Bitwarden 服务器实现，提供了不错的 web 管理界面，并与 Bitwarden 兼容。</description>
    </item>
    
    <item>
      <title>昨夜梦有感</title>
      <link>/blog/202.html/</link>
      <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/202.html/</guid>
      <description>2023年07月09日夜梦
昨晚我做了一个梦，也许是因为最近太多玩《极限国度》的缘故。在梦中，我在一条陌生的赛道上狂飙，以极速骑行。当我经过一座拱桥时，遇到了一个年轻人，他和我做着相同的动作，优雅地在空中旋转着，360度的转体后稳稳地降落下来。
随着时间的推移，场景莫名地转变，我来到了小时候的家乡。高耸的水塔和大坝，两旁是湍急的河流。突然间，原本明亮的天空变成了黑色。我抬头仰望，只见一片漆黑，空气中仿佛弥漫着焦糊的味道，给人一种破败的感觉。太阳的踪迹已然消失，不是夜晚降临的景象，而是一个黑色的太阳，或者说太阳熄灭了，但我的眼睛仍能看到周围的景物。
我感到一丝恐慌，不知道光源从何而来。我和那个年轻人沿着小路继续前行，世界变得异常安静，没有任何声音。就在我不知所措之际，路的尽头出现了一个村庄，人影模糊地闪动着。我正打算走过去询问发生了什么事情，那个年轻人却拉住了我，示意我保持安静。
我们继续前行，发现许多生物，看起来像《我的世界》游戏中的末影人，不停地穿梭着。突然间，它们似乎发现了我们，展开翅膀向我们飞来。作为普通人，这让我感到非常害怕。紧张中，我就在这时醒了过来，看了看手机，显示6点半。无法再入睡，我起来倒了杯水。
ps: 梦是没有丝毫逻辑的，脑海中的剧情可能前言不可后语，上一秒还在街道上奔跑，下一秒就穿越到了侏罗纪被当作食物吞进腹中。可能是精力太充沛的缘故，已经很久没有做梦了。
为了避免胡思乱想，好好运动一番吧！</description>
    </item>
    
    <item>
      <title>极美的晚霞画卷</title>
      <link>/blog/201.html/</link>
      <pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/201.html/</guid>
      <description>使用设备 RedmiK50 拍摄。
当太阳逐渐西沉时，天空的色彩变得温暖而温和，绝美的晚霞画卷即将展开。
这是我今天最喜欢的一张照片。</description>
    </item>
    
    <item>
      <title>aos 事件触发失败</title>
      <link>/blog/200.html/</link>
      <pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/200.html/</guid>
      <description>项目中遇到这个问题，网页往下滑动时加载 aos 事件触发不了，原因也很简单，因为 aos.js 是在页面加载时获取页面高度从而绑定一些事件进去，但是如果这个文件加载速度比框架加载的快，会导致两者高度不一致，从而动画效果触发失败。
我尝试用 window.onload 但是效果并不好，依旧失败。
window.onload=function(){ AOS.init({offset:100,duration:600,once:true,delay:100,}); } 所以决定加个 100ms 的延迟调用实例，这样就没问题了。</description>
    </item>
    
    <item>
      <title>子舒周刊 -19 | 九堡大桥</title>
      <link>/blog/weekly-19.html/</link>
      <pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-19.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
今年刚刚修好的上桥骑行路线，体验一下骑行爬坡过桥。坡度还比较缓，难度不大很轻松。
1.李跳跳自定义规则 https://github.com/Snoopy1866/LiTiaotiao-Custom-Rules
由于一些特殊原因，导致软件开发者不能继续维护发布，有老的安装包可以继续使用，但是规则需要更新。
[李跳跳安装包下载]
本项目收集适用于“李跳跳”的 App 自定义规则，包括基础规则和增强规则。</description>
    </item>
    
    <item>
      <title>晚霞彩虹</title>
      <link>/blog/199.html/</link>
      <pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/199.html/</guid>
      <description>短短几分钟后，彩虹就消失得无影无踪，我庆幸自己按下了快门。</description>
    </item>
    
    <item>
      <title>子舒周刊 -18 | 钱塘夜色</title>
      <link>/blog/weekly-18.html/</link>
      <pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-18.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
杭州亚运会主场馆奥体中心，又称“大莲花”。在夜色的笼罩下灯光变幻莫测，彷佛盛开的莲花。
1.Gitstars https://gitstars.cfour.top/
https://github.com/cfour-hi/gitstars
管理 GitHub star 的网站。Github 作为开发者的第一社交平台，拥有数不胜数的优秀开源项目，给工作和学习带来巨大方便，遇到自己需要或是喜爱的项目只需点击 Star 便可收入囊中。</description>
    </item>
    
    <item>
      <title>夜骑湘湖</title>
      <link>/blog/198.html/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/198.html/</guid>
      <description>突然萌生了骑行的想法，行动力很强的我立刻研究相关知识并付诸实践，两个小时36公里浅浅锻炼一下。绕着湘湖骑了一大圈，开始还有点累腿，后面慢慢就适应节奏了。
看着湖景，赏荷花，夜风迎面吹来，别有一番滋味。</description>
    </item>
    
    <item>
      <title>子舒周刊 -17 | 音频播客新闻日志等推荐</title>
      <link>/blog/weekly-17.html/</link>
      <pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-17.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
1. 枫言枫语 https://fyfy.fm/
听见科技与人文的声音，一档由开发者 @枫影 JustinYan 和设计师 @自力 hzlzh 主持的播客节目。</description>
    </item>
    
    <item>
      <title>vue2 中引入 Ant Design 报错问题</title>
      <link>/blog/197.html/</link>
      <pubDate>Tue, 06 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/197.html/</guid>
      <description>https://1x.antdv.com/docs/vue/getting-started-cn/
根据 Ant Design 官方文档，在 vue2 中安装组件时使用指令：
npm i --save ant-design-vue 但在实际操作中会出现问题，它仅适用于 vue3 项目，在 vue2 中需要带上相匹配的版本号。</description>
    </item>
    
    <item>
      <title>子舒周刊 -16 | 好用的图床管理工具</title>
      <link>/blog/weekly-16.html/</link>
      <pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-16.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
1.PicW https://github.com/Flysky12138/PicW
https://picw.4everland.app/
Github 图床管理 PWA 应用。
2.ipfs 图床 https://cdn.</description>
    </item>
    
    <item>
      <title>关于 HugoFast 这个项目</title>
      <link>/blog/196.html/</link>
      <pubDate>Fri, 02 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/196.html/</guid>
      <description>项目来源于我的突发奇想，并且基于热爱折腾的心理，利用GitHub本身提供的Api，将博客管理面板化。
目前仅支持 hugo，其他程序有对应的工具，就不造轮子了。
Github: https://github.com/98zi/HugoFast
网站: https://hugofast.netlify.app/
用户文档: https://hugofast-docs.netlify.app/
1. 自托管 前往 https://github.</description>
    </item>
    
    <item>
      <title>子舒周刊 -15 | 提高生产力的脚本工具</title>
      <link>/blog/weekly-15.html/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-15.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
1.python-markdown-to-wordpress https://github.com/nefu-ljw/python-markdown-to-wordpress
批量上传 Markdown 文件到 WordPress，并且支持更新单个 WordPress 文章</description>
    </item>
    
    <item>
      <title>随想录 (10)</title>
      <link>/blog/195.html/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/195.html/</guid>
      <description>夕阳伴随着晚霞划破了云层。
下班时在路口发现的风景，记录美好的瞬间。
https://github.com/canton7/SyncTrayzor
搞定了 SyncTrayzor，一个Syncthing 的应用，可以不用挂载终端，始终在电脑后台进行同步，占用也很低，一切都是在无感下进行操作的，适合我这种极简主义风格的人。
流程是：家中的电脑 &amp;lt;&amp;ndash;&amp;gt; 服务器 &amp;lt;&amp;ndash;&amp;gt; 公司电脑三方同步，写笔记和博客更方便了。</description>
    </item>
    
    <item>
      <title>子舒周刊 -14 | Github 工具</title>
      <link>/blog/weekly-14.html/</link>
      <pubDate>Fri, 19 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-14.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
1.Github Desktop 汉化 https://github.com/robotze/GithubDesktopZhTool https://desktop.github.com/
Github Desktop 汉化工具 支持 Windows Mac Linux</description>
    </item>
    
    <item>
      <title>hugo纯静态编写一个字数统计脚本</title>
      <link>/blog/194.html/</link>
      <pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/194.html/</guid>
      <description>早上起来的时候看到微信群中有博友分享自己的建站时间，聊着聊着说到总字数上面，这时我才发现我的网站没有统计的地方，索性就自己写一个吧，因为是静态博客，所以不涉及后端、服务器等，只用前端的方式来解决。
这里需要借助我之前的一篇文章，《用原生js给网站写个搜索功能》，里面有提到如何生成一个文章列表json文件，这里我们会用到这个文件 index.json。
写一个ajax方法，让浏览器遍历每个页面。
$(document).ready(function () { $.ajax({ url: &amp;#39;/index.json&amp;#39;, type: &amp;#39;get&amp;#39;, dataType: &amp;#39;json&amp;#39;, success: function (data) { const pageUrls = data; const totalNum = pageUrls.</description>
    </item>
    
    <item>
      <title>子舒周刊 -13 | 热爱生活和未来</title>
      <link>/blog/weekly-13.html/</link>
      <pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-13.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
1.vue-fabric-editor https://nihaojob.github.io/vue-fabric-editor/#/
https://github.com/nihaojob/vue-fabric-editor
基于 fabric.js 和 Vue 的图片编辑器，可自定义字体、素材、设计模板。fabric.js and Vue based image editor, can customize fonts, materials, design templates.</description>
    </item>
    
    <item>
      <title>子舒周刊 -12 | 提升 chatGPT 使用体验</title>
      <link>/blog/weekly-12.html/</link>
      <pubDate>Fri, 05 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-12.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
1.KeepChatGPT https://github.com/xcanwin/KeepChatGPT
非常好用的一款油猴脚本，提升使用 chatGPT 时的体验。
这是一款 ChatGPT 畅聊插件，让你不再遇到网络报错，不再需要刷新网页 解决了报错：NetworkError when attempting to fetch resource.</description>
    </item>
    
    <item>
      <title>子舒周刊 -11 | 追求技术实用主义</title>
      <link>/blog/weekly-11.html/</link>
      <pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-11.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
周刊开源地址：https://github.com/98zi/weekly-note
拍摄于玉皇山顶。
工具 1.V2EX Polish https://github.com/coolpace/V2EX_Polish
https://www.v2p.app/
一款专为 V2EX 用户设计的浏览器插件，提供了丰富的扩展功能，让原生页面焕然一新！</description>
    </item>
    
    <item>
      <title>子舒周刊 -10 | 一款极简开源的输入法</title>
      <link>/blog/weekly-10.html/</link>
      <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-10.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
拍摄于梅山坞。
网站 1. 小狼毫 rime https://github.com/ssnhd/rime
Rime Squirrel 鼠须管配置文件（朙月拼音、小鹤双拼、自然码双拼），极简开源的输入法。</description>
    </item>
    
    <item>
      <title>周六爬山日常</title>
      <link>/blog/193.html/</link>
      <pubDate>Sat, 15 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/193.html/</guid>
      <description>本周行程：万松书院出发，翻越凤凰山，登顶玉皇山，俯瞰八卦田。
上周和朋友爬山，由于实力太弱拖了后腿，因此奋发图强，直接下单了一把登山杖，差生文具多。但是有一说一，登山杖是真的好用，不管是上山还是下山都很借力，对膝盖起到了一定的保护作用。
这次徒步旅行相对来说还是比较轻松的，拥抱大自然，见到了很多不一样的风景，这是城市所不能拥有的，特别是登高望远，那种心理状态一下子就升华了。虽然只是个小山坡，但是还是能体会到 “会当凌绝顶，一览众山小。”
再加上一路与朋友说说笑笑，聊聊天，说实话还是蛮充实的。最近迷上了爬山这项活动，基本每周都会去一趟，呼吸新鲜空气，观看自然的风光。
每到一个地方都会打卡记录一番。
八卦田遗址公园 凤凰山俯瞰钱塘江 玉皇山俯瞰西湖 万松书院 </description>
    </item>
    
    <item>
      <title>子舒周刊 -9 | openai 封禁了一批账号</title>
      <link>/blog/weekly-9.html/</link>
      <pubDate>Sat, 15 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-9.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
话题 1.最近 openai 封禁了一批 ip，大多是共享账号等，但也影响了正常服务的运行。
程序 1.ChatGPT-Next-Web https://github.com/Yidadaa/ChatGPT-Next-Web</description>
    </item>
    
    <item>
      <title>Github Actions 自动化打包流程</title>
      <link>/blog/192.html/</link>
      <pubDate>Thu, 13 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/192.html/</guid>
      <description>Github Actions 监听仓库 commit 事件，然后执行自动化打包流程，并通过第三方平台自动部署，发布非常方便。
name: Build on: push: branches: - main jobs: build: runs-on: ubuntu-latest steps: - name: Checkout code uses: actions/checkout@v2 - name: Install dependencies run: npm install - name: Build run: npm run build - name: Commit changes run: | git config --global user.</description>
    </item>
    
    <item>
      <title>从云溪竹径到九溪烟树</title>
      <link>/blog/191.html/</link>
      <pubDate>Sun, 09 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/191.html/</guid>
      <description>
这棵树刚种下的时候，还是宋朝初年。 茶园，梅家坞。 </description>
    </item>
    
    <item>
      <title>子舒周刊 -8 | 一个 ChatGPT 应用平台</title>
      <link>/blog/weekly-8.html/</link>
      <pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-8.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
网站 1.https://open-gpt.app/ 立即使用海量的 ChatGPT 应用，或在几秒钟内创建属于自己的应用。
2.SNK https://github.com/Platane/snk
从 github 用户贡献图生成贪吃蛇游戏，并将屏幕截图输出为动画 svg 或 gif.</description>
    </item>
    
    <item>
      <title>子舒周刊 -7 | 一个 Notion 风格的编辑器</title>
      <link>/blog/weekly-7.html/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-7.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
程序 1. BlockNote https://github.com/TypeCellOS/BlockNote
https://www.blocknotejs.org/
基于 react 的编辑器，notion 风格非常优雅。</description>
    </item>
    
    <item>
      <title>子舒周刊 -6 | 使用 Notion 搭建网站的方案</title>
      <link>/blog/weekly-6.html/</link>
      <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-6.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
程序 1. NotionNext https://github.com/tangly1024/NotionNext
一个使用 NextJS + Notion API 实现的，部署在 Vercel 上的静态博客系统。为 Notion 和所有创作者设计。</description>
    </item>
    
    <item>
      <title>西湖 · 春游</title>
      <link>/blog/190.html/</link>
      <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/190.html/</guid>
      <description>春日繁花媚不言，天高云淡乐无边。
雨过天晴添好景，走遍山川任心怜。
持续了一周的降雨，终于迎来了一天晴朗，决定去春游。
杭州西湖 - 郭庄，花圃公园打卡。</description>
    </item>
    
    <item>
      <title>子舒周刊 -5 | 使用 css 写出精致的 UI 小组件</title>
      <link>/blog/weekly-5.html/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-5.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
网站 1. AwA UI https://www.handsome-css.com/
使用 html 和 css 制作的非常漂亮的开源 UI 组件。</description>
    </item>
    
    <item>
      <title>用原生js给网站写个搜索功能</title>
      <link>/blog/189.html/</link>
      <pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/189.html/</guid>
      <description>本文也算是一篇教程，可以给 hugo 网站加个搜索功能，并且实现热更新，体验感更好。
如果是其他程序，只需要按照特定的模板生成以下格式的文件即可，主要代码从 第2部分 开始，第一章节写的是如何用 hugo 输出文章列表 json 文件。</description>
    </item>
    
    <item>
      <title>子舒周刊 -4 | chatGPT3.5API 发布</title>
      <link>/blog/weekly-4.html/</link>
      <pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-4.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
基于 chat3.5 api 的网站，测试过速度很快，不需要翻墙。
https://freechatgpt.lol/ https://chatgpt.ddiu.io/ https://desk.im/ https://freegpt.cc/</description>
    </item>
    
    <item>
      <title>博客运行1000天了</title>
      <link>/blog/188.html/</link>
      <pubDate>Fri, 10 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/188.html/</guid>
      <description>使用 openai 生成。 [大漠孤烟直，长河落日圆]
不知不觉，已经坚持写博客1000天了，从2020年6月14日开始，第一次踏入这个圈子。最开始我还会写一些技术类的文章，但随着时间的推移，这意义不大，因为类似的文章在互联网都能找到一大把，因此我放弃这种类型文章的写作。主要进行了生活分享，和一些随笔等。更新日期也不固定，哪天忽然来了灵感会兴奋的更新一次。
虽然频率不高，但是从未间断，而且还让更多的人和我一起就某个话题进行讨论，这都是让我感觉到有意义的事情。分享自己的经验，心路历程和价值观，在互联网留下自己的足迹，或许在很久之后，我渐渐淡出这个圈子，但是我会保存这个网站在GitHub等平台，如果有缘分的话，十年、二十年，你都可以在搜索引擎无意中看到我。每当一想到这，我都感觉充满了干劲。
这一路上有朋友慢慢退出，我也表示遗憾，就目前而言，我应该不会放弃做博客，阅读者很少，但总归是有的。不能让自己失望，更不能让其他朋友失望，期待十年后依旧可以在互联网看到我的身影。回首过往萧瑟处，也无风雨也无晴！</description>
    </item>
    
    <item>
      <title>GitHub生成一个新的ssh密钥</title>
      <link>/blog/187.html/</link>
      <pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/187.html/</guid>
      <description>要在GitHub上生成新的SSH密钥，请按照以下步骤操作：
打开终端或命令提示符。 输入以下命令：将&amp;quot;your_email@example.com&amp;quot;替换为您在GitHub上注册的电子邮件地址。 ssh-keygen -t rsa -b 4096 -C &amp;#34;your_email@example.com&amp;#34; 稍后您将被提示输入文件保存位置和密码短语。您可以保持所有默认设置，只需一直按Enter键即可。 然后输入以下命令：eval &amp;ldquo;$(ssh-agent -s)&amp;rdquo; 然后输入以下命令以将新密钥添加到ssh-agent中：ssh-add ~/.</description>
    </item>
    
    <item>
      <title>this.$set 给 vue 数组添加数据</title>
      <link>/blog/186.html/</link>
      <pubDate>Sun, 05 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/186.html/</guid>
      <description>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性，它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上。
如果直接给数组添加对象，视图不会更新，但是可以输出正确的值；只有通过 this.$set 覆盖才可以更新视图。
for (let i = 0; i &amp;lt; this.</description>
    </item>
    
    <item>
      <title>子舒周刊 -3 | 建站能用到的免费工具</title>
      <link>/blog/weekly-3.html/</link>
      <pubDate>Sun, 05 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-3.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
每周分享一些软件，程序，文章等。（2 月 19 日 -2 月 25 日）</description>
    </item>
    
    <item>
      <title>子舒周刊 -2 | 如何使用本项目搭建网站？</title>
      <link>/blog/weekly-2.html/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-2.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
每周分享一些软件，程序，文章等。
使用 cloudflare r2 / zoer + github actions 混合部署。</description>
    </item>
    
    <item>
      <title>子舒周刊 -1 | hello,world！这是一个新的开始</title>
      <link>/blog/weekly-1.html/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/weekly-1.html/</guid>
      <description>每周四发布，尽量不停更，分享有趣的软件，程序，文章等。 周刊列表
每周分享一些软件，程序，文章等。2023-02-21
尽量保证每周四发布。</description>
    </item>
    
    <item>
      <title>乌镇 · 南浔</title>
      <link>/blog/185.html/</link>
      <pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/185.html/</guid>
      <description>周末出游，去了两个古镇，体验还不错，分享几张旅游风景照。</description>
    </item>
    
    <item>
      <title>随想录 (10) 我是否陷入了信息茧房？</title>
      <link>/blog/184.html/</link>
      <pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/184.html/</guid>
      <description>如题，我是否陷入了信息茧房？暂时是以一个疑问句的形式出现，因为我还未确认事实真的如此。
什么是信息茧房？
信息茧房是一种现代的网络语境下的概念，指的是某些人因过度沉溺于网络而逐渐隔离于现实世界，形成了一种&amp;quot;信息茧&amp;quot;，难以自拔。这些人可能会在网络上消耗大量的时间，而忽视了现实生活中的关系和活动，甚至对现实世界产生抵触。
最新，openai 推出的 chatGPT 再一次火遍全网。而在去年的11月底，我曾经体验过一段时间，当时是它刚刚面世的时候，我也算是第一批体验用户。
那时给我的感觉就像是一个初出茅庐的 ai ，我在和它交流的过程中，明显可以感觉到他还能稚嫩，但还是展现出了极强的学习力，这让我很震撼。但随着时间的推移，它的热度逐渐下降，我也很少使用它了。</description>
    </item>
    
    <item>
      <title>如何让 hugo 支持渲染 html 代码？</title>
      <link>/blog/183.html/</link>
      <pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/183.html/</guid>
      <description>想在文章中插入 iframe, video, 以及其他比如 summar y等标签，可以配置一下 config 文件。
如果是 config.toml，加上下面配置； [markup] [markup.</description>
    </item>
    
    <item>
      <title>使用 cloudflare 反代 gravatar 生成镜像</title>
      <link>/blog/182.html/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/182.html/</guid>
      <description>1.介绍 cloudflare 有一个非常好用的功能&amp;mdash;Workers，可以在无服务器的状态下运行一些程序，包括常见的反向代理等。
所以我利用这一功能实现对 gravatar 反代，达到国内访问加速的目的。
话不多说，开始流程操作，分享我的部署过程。
1.登陆后，在主页点击左侧的 Workers，然后点击创建服务。
2.服务名称随意填写，然后点击右下角创建。</description>
    </item>
    
    <item>
      <title>利用 memos 生成的在线动态列表</title>
      <link>/blog/181.html/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/181.html/</guid>
      <description>memos 是一个具有知识管理和社交功能的开源自托管备忘录中心。
Github地址：https://github.com/usememos/memos
可以用它本身提供的 api，然后结合静态博客，做成一个在线的动态列表，类似于朋友圈功能。
接口 url 有固定的格式，openId 是每个用户自动生成的。
其次我又写了两个方法，一个是时间戳转成正常时间格式，一个是利用正则删去内容中多余的标签。</description>
    </item>
    
    <item>
      <title>分享一个页面点击特效</title>
      <link>/blog/180.html/</link>
      <pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/180.html/</guid>
      <description>点击页面时可以弹出随机颜色小心心，目前我的网站就使用了这个特效。
直接将下面的代码复制到引入的 js 文件中即可，不用进行其他配置。
!function(e,t,a){function n(){c(&amp;#34;.heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.</description>
    </item>
    
    <item>
      <title>一周阳人日记</title>
      <link>/blog/179.html/</link>
      <pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/179.html/</guid>
      <description>不出所料，每天往返于公司，地铁，住的地方，我阳了。 很难受，客观记录一下我的症状吧。
第一天：2022/12/19
持续发烧38℃左右，没有吃药，硬抗过去。
抗原测试呈阳性，应该是第二天或者第三天了，但是前几天没有任何症状，所以就不算在内了，从昨天夜里才开始起反应。
在床上躺着四肢酸痛，皮肤掉皮，呈粉末状，大概是高烧的原因。
嗓子哑疼，喝了梨水+冰糖，很润滑，舒服好多。
临睡前测了38.7℃，吃了感冒药，居然变得精神，刷了会手机。
第二天：2022/12/20
持续头晕+头疼，凌晨又吃了一颗感冒药，过了一会浑身出汗，睡衣直接浸透但是没有力气，就坚持睡觉。</description>
    </item>
    
    <item>
      <title>我的2022年度总结</title>
      <link>/blog/178.html/</link>
      <pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/178.html/</guid>
      <description>枯木逢春。
又到了一年一度的总结时间，回顾自己这一年做了些什么。我通常都是在最后一个月开始进行总结，预留出足够的时间让我可以好好思考与回顾，如果时间很短就会显得很仓促。没有什么主题，就是想到哪写到哪，讲讲这一年的感受。
这两天有个消息，彻底取消核酸和行程卡了，健康码也随之取消查看，因为失去了意义。不评价这件事情，单纯说一下感受，今年终于可以回家过年了。这三年来，只有在五一国庆等节假日回老家，一到春节都因为各种缘故取消了回家的行程，多少有些遗憾，在城市过年也缺少那么一些年味。我的春期假期大概15天左右，时间还是很充裕的，可以好好计划一下行程，约下朋友出去玩两天，做好个人防护。
开源了一些自己写的小工具和主题，包括一些油猴插件，程序主题，浏览器扩展等，有一二十个用户，虽然很少，但是好评不错，给了我很大的激励。
为爱发电，我也乐于此道，有时候会收到一些有关开源项目的邮件，我都会和对方展开讨论，解决了别人的问题，也让我有了更深刻的认知，学海无涯。
工作上自我感觉有了一点提升，安排我独自负责一个项目，开拓了我的技术栈，会用到一些没接触过的技术，一边搜索翻阅文档一边写代码，面向业务提升自己比纯粹的看代码好像更有意思。但是这样的提升比较流于表面，不够深刻接触不到核心，必须承认这是我的短板，我有必要重新规划一下自己的路线。不过相比去年的浑浑噩噩，这段时间还算是充实。也结识了一些行业内的朋友，休息天会出来闲谈吃饭，去西湖看看荷花。
使用思源作为笔记软件，每天坚持写日记，其实也就是一些生活琐事和心情，坚持记录下来，偶尔会翻阅一下看看自己以前干过什么蠢事，这也是一种乐趣。为了表达支持订阅了年付会员，这的确是一个很优秀的 note 软件，开发者也在不断优化体验。唯一的缺憾就是无法同步配置文件，询问过作者是因为不同设备系统兼容性的问题，所以目前无法做到完美的同步，不过还是很赞。
今年的雪来的格外的早，11月份就下雪了，而且杭州今年的夏季也是格外的热，高达40多度，这很反常，不是气象学专家所以无法对这一现象做出分析，只能表达自己的感概。每年都是365天，同样的时间生活出不一样的自己，孑然一身，牵挂的只有自己的家人。</description>
    </item>
    
    <item>
      <title>贰拾肆年</title>
      <link>/blog/177.html/</link>
      <pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/177.html/</guid>
      <description>越长大越不想长大，在人生的第24年经历了很多事情。</description>
    </item>
    
    <item>
      <title>未若柳絮因风起</title>
      <link>/blog/176.html/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/176.html/</guid>
      <description>冬天来了，杭州今年的雪来的猝不及防，前天还是十多度，今天下雪，走在路上只感到寒风刺骨。
“白雪纷纷何所似？
撒盐空中差可拟。
未若柳絮因风起。”
ps: 一切都在朝好的方向发展，纪念博客建立 900 天。</description>
    </item>
    
    <item>
      <title>js中 [ ]&#43;{ } 和 { }&#43;[ ] 的区别</title>
      <link>/blog/175.html/</link>
      <pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/175.html/</guid>
      <description>[ ]+{ }：一个数组加一个对象。
加法会进行隐式类型转换，规则是调用其valueOf()或toString()以取得一个非对象的值(primitive value)。
如果两个值中的任何一个是字符串，则进行字符串串接，否则进行数字加法。[ ] 和 { } 的 valueOf() 都返回对象自身，所以都会调用 toString()，最后的结果是字符串串接。</description>
    </item>
    
    <item>
      <title>11月8日月全食全程录像</title>
      <link>/blog/174.html/</link>
      <pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/174.html/</guid>
      <description>转自 youtube: https://youtu.be/o0ewAMw-ftg
很遗憾我自己的手机像素不行，拍不清晰，但是肉眼可见的红，也有些壮观。</description>
    </item>
    
    <item>
      <title>霜叶红于二月花</title>
      <link>/blog/173.html/</link>
      <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/173.html/</guid>
      <description>远上寒山石径斜，白云深处有人家。
停车坐爱枫林晚，霜叶红于二月花。</description>
    </item>
    
    <item>
      <title>安装一个基于 Github 的静态图床程序</title>
      <link>/blog/172.html/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/172.html/</guid>
      <description>demo: https://img.zburu.com/
今天分享一下如何使用 Github 作为图床，首先就要推荐这个工具 picx 。
Github 仓库: https://github.</description>
    </item>
    
    <item>
      <title>localStorage 的相关运用</title>
      <link>/blog/171.html/</link>
      <pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/171.html/</guid>
      <description>localStorage 是浏览器自带的一个属性，只读的localStorage 属性允许你访问一个Document 源（origin）的对象 Storage；存储的数据将保存在浏览器会话中。localStorage 类似 sessionStorage，但其区别在于：存储在 localStorage 的数据可以长期保留；而当页面会话结束——也就是说，当页面被关闭时，存储在 sessionStorage 的数据会被清除。</description>
    </item>
    
    <item>
      <title>hugo 一键打包并上传 github</title>
      <link>/blog/170.html/</link>
      <pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/170.html/</guid>
      <description>分享一个 hugo 一键打包并上传 github 的方法，前提是你之前上传过 GitHub 仓库。
采用 window 支持的 sh可执行文件，在根目录新建一个 hugo.</description>
    </item>
    
    <item>
      <title>开发后的反省</title>
      <link>/blog/169.html/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/169.html/</guid>
      <description>晚上给朋友写了一个油猴脚本，场景是一个拥有很多输入框的表单，多为经常填写的一些字符串。跟我说了一下，刚好没什么事情，吃完晚饭抽两小时出来简单写了写。
需求是预设多套模板，后期可以自己添加内容，置顶在网页空白处，点击按钮让设置好的文本填充到网页的表单中。
处理起来很简单，我原本打算使用ajax调用json文件，把模板写在json中，这样一目了然便于后期自行添加数据，但是在测试后发现目标网站屏蔽了外部文件，所以放弃这种写法。转而new了一个数组，每个对象就是一套模板，接下来就是简单的循环，写了一个可以缩放的弹窗，然后把交互的按钮绑定点击事件，点击对应按钮就会在网站上填充对面模板的字符串。
流程大概就是这样，结束之后在给他润润色，写一下css代码。总体来说没什么难度，两个小时不到就搞定了。
但是我发现，天天写vue，element写多了，最基础的js有些生疏了，比如数组的操作遍历循环，中间竟然还报错，仔细检查才发现原因，实属不应该。
深刻反省一下自己，基础知识还是要巩固的，不能一味的调用框架，即使它写起来很爽。</description>
    </item>
    
    <item>
      <title>将数组中多个对象的同名属性值取出合并成新数组</title>
      <link>/blog/168.html/</link>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/168.html/</guid>
      <description>业务中需求的方法，接口返回一个数组，里面包含了大量的对象，具有同名的属性名，比较常见。但是需要将其中参数为name的属性值全部取出，合并成数组。
const num = [ { id: 1, name: &amp;#39;abc&amp;#39;, }, { id: 2, name: &amp;#39;xyz&amp;#39;, } ] function getFields(arrnum, field) { const resnum = []; for (let i = 0; i &amp;lt; arrnum.</description>
    </item>
    
    <item>
      <title>关于密码的一些想法</title>
      <link>/blog/167.html/</link>
      <pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/167.html/</guid>
      <description>今天在坐地铁的过程中，突然想要一个问题，一个安全稳定，便于记忆的密码时什么样子的。是否要包括字母大小写，数字，以及特殊符号？
如何设置并存储？ 我想这是必须的，但是密码如果太过复杂，就不便于记忆。而想要记忆就必须有自己的规律，可一旦有了规律，别人在破解的时候就有了更多的思路，安全性相对来说就下降了。
不论怎么想，这两者是冲突的，很难让它们统一起来。
然后就和朋友讨论关于密码的问题，他们也有着自己独特的方法，给了我很多扩展的思路，比如记忆一个公式，圆周率第多少位，拼音+数字等等，这样既能够记忆，也拥有足够的混淆性。你不知道它的位置下标，就不能够找到对应的密码字符，安全性比通用一套密码又高了很多。
也有朋友表示自己在使用密码管理软件，比如 1password，bitwarden，KeePass 等，通过算法可以自动生成各种高复杂度的密码字符串。但是在述说的过程中，他们表示了对密码管理软件的担忧。如果软件遇到破解或者勒索，主密码丢失等，那么所有密码就不复存在，尽管这种可能性很少，但是前段事件就发生了这样的事情。
而且大的软件商持有更多的用户，一旦遇到问题，产生的影响就更大，用户只能寄希望于厂商有足够的攻防能力。所有密码在云上都有备份，这本身就是一个致命的缺陷，如果云端数据被攻破，后果不堪设想。
扩展说说 个人习惯使然，让我很难百分百的信任各种云，可能是被害妄想症吧，总觉得不好，把所有数据扔到云上保存对我来说是一件极其难受的事情。所以我一般都是三处备份，本地肯定要留一份在硬盘中，服务器保存一份，然后在oss桶中再备份一些不太重要的数据。成本不算高，但是需要持续维护这些数据，相对于我来说，还算是比较轻松的，并且我也乐在其中。</description>
    </item>
    
    <item>
      <title>你是否想过成为一名作家？</title>
      <link>/blog/166.html/</link>
      <pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/166.html/</guid>
      <description>https://poets.org/poem/so-you-want-be-writer
这是曾经询问过自己的一个问题，我想很多人在年少时期可能都会有过这样的经历，渴望将自己的文字带给更多人。
这件事情大多发生在高中时期吧，如果我没记错的话。忽然想起来那个年轻段的人都有些中二，看了不少玄幻和悬疑小说，心中泛起了写小说的念头，于是动笔。但最终也没有坚持很久，草草写了几万字，只在几个朋友中传阅。
可惜在高考结束后一些残留的手稿都丢失了，每每想到这件事情都暗自懊恼，也算是一个回忆吧。现在再让我写根本没有那个精力，但我也曾涌起过当一名作家的想法，好像文科生都曾这样。
我有个朋友喜欢写诗，现在看起来语义不那么通顺，不太符合诗词规范，但是他并不在意，很是乐于此道，我也给了他很大的鼓励，虽然文字中伤春悲秋，“为赋新词强说愁”。
持续写作是一个好的习惯，从前是为了抒发情感，现在是为了输出自己的思考。大同小异，归根结底还是对自我的一种输出。
so you want to be a writer?</description>
    </item>
    
    <item>
      <title>文档和视频，你更喜欢哪种学习方式？</title>
      <link>/blog/165.html/</link>
      <pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/165.html/</guid>
      <description>如题，这是我今天思考的话题。灵感来源于我在dev.to网站上看到的一个帖子。对于 learning 的方式，更倾向于看文档还是视频？我觉得可以从多个维度进行分析。
学习进度，也可以说是过程 行业领域 后天应该养成什么样的习惯呢？ 1.学习进度 学习进度应该是对学习方式影响最大的因素了。
学习的初始阶段以看视频为主，应该对这个领域不熟悉，一直在行内人看起来随手就能做很简单的操作，新人往往不能够很好的了解它，所以最开始的阶段最好是以视频教材为主。
打个比方，上学时老师都是手把手的教学，因为你什么都不会，必须口口相传，这是对待新人的方式，如果让他自己一直干看，一学期下来估计也看不懂几页书。（当然了，天才除外，这不在讨论的范围，大家90%都是普通人。）然后到后期的时候一般都是自习因为该教的基础都是都教了，需要学生自己研究琢磨，不然根本不能融会贯通。</description>
    </item>
    
    <item>
      <title>浴鹄湾游记</title>
      <link>/blog/164.html/</link>
      <pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/164.html/</guid>
      <description>浴鹄湾，东靠杨公堤，西临三台山路，北至三台梦迹景区，南到赤山埠。</description>
    </item>
    
    <item>
      <title>水利博物馆照片</title>
      <link>/blog/162.html/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/162.html/</guid>
      <description>公司团建，随手拍两张照片。
白居易诗。</description>
    </item>
    
    <item>
      <title>火烧云</title>
      <link>/blog/159.html/</link>
      <pubDate>Fri, 12 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/159.html/</guid>
      <description></description>
    </item>
    
    <item>
      <title>一些容易遗漏的点</title>
      <link>/blog/158.html/</link>
      <pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/158.html/</guid>
      <description>监听对象时如果值是null会报错，默认值设置为{}； for in 只能遍历对象 i in 4是错误的写法； 动态获取数组-拼接传参 var arr = [ &amp;#34;单位1&amp;#34;, &amp;#34;单位2&amp;#34;, &amp;#34;单位3&amp;#34;, &amp;#34;单位4&amp;#34;, &amp;#34;单位5&amp;#34; ] // 1.</description>
    </item>
    
    <item>
      <title>随想录 (9)</title>
      <link>/blog/157.html/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/157.html/</guid>
      <description>落霞与孤鹜齐飞，秋水共长天一色。
放个图防止抑郁。
昨天看了一个帖子很有感触，土生土长的城市本地人很难体会每隔一段时间要重新建立社会关系的难受，从小到大，每到一个地方上学，从陌生变为熟悉，中间总有有一段难熬的时间。很多随父母打工而四处的求学的小孩，特别能有这种体会，因此也就有很多人厌恶上学，他们不理解为什么总是要四处奔波，父母也不理解小孩为什么不喜欢学习，两者误会，家庭矛盾也因此诞生了。当然我说的很片面，这只是其中一个原因。
我也只是想让自己牢记，原来艰苦的生活不但让身心变得疲惫，还能带来精神上的贫穷，让自己明白原来还有这种只有四处奔波的人才能体会。说一下我的经历，小学二年级之前在老家乡下读书，然后辗转在厦门上的小学，初中和高中又回到县城读书，大学是在郑州读书，工作后又来到杭州。 看着这个时间段，很难有一个朋友可以从小到大陪着你，大多数人都是这样，悲哀又现实。
踏入工作之后，应该是更能体会，一个人在陌生的城市，除了工作好像也没有其他事可以做，对于社恐来说更是一种严重的环境。而我应该算是比较幸运的，在一个陌生的城市还有家人和恋人，减缓了那种焦虑感，但我认识的一些人确是情绪受到很大影响，包括压力太大而离开这座城市。
写博客并不是为了贩卖焦虑，而且觉得有些话不吐不为快，在文字中发泄情绪也是一种良好的方法，为了明天的生活慢慢加油。</description>
    </item>
    
    <item>
      <title>随想录 (8)</title>
      <link>/blog/156.html/</link>
      <pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/156.html/</guid>
      <description>来自一位朋友的意难平。</description>
    </item>
    
    <item>
      <title>win11 使用 10版本的鼠标右键设置</title>
      <link>/blog/155.html/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/155.html/</guid>
      <description>实测好用，没有坑。
管理员权限下打开终端，输入。
reg add &amp;#34;HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32&amp;#34; /f /ve 随后重新启动资源管理器即可
taskkill /f /im explorer.</description>
    </item>
    
    <item>
      <title>Anghunk 主题如何在后台评论列表解析表情？</title>
      <link>/blog/154.html/</link>
      <pubDate>Sat, 30 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/154.html/</guid>
      <description>本文专为 Anghunk 主题开发文档而写。 https://github.com/98zi/Anghunk
方案是在梦繁星的协助下完成的。
介绍 Anghunk 评论携带很多精美的表情，但是正常情况下 Typecho 后台是没办法正常解析这些表情的。如下图；</description>
    </item>
    
    <item>
      <title>随想录 (7) 随便写的别当真</title>
      <link>/blog/153.html/</link>
      <pubDate>Fri, 29 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/153.html/</guid>
      <description>好像很久没有写随笔了，最近发生的事很多，却不是件件如人心意。上午烈日当空，下午乌云密布，也已经是常事。当然我说的是天气。
生活只是尽量让自己过的更好，喂自己一口毒鸡汤，艰难前行。
&amp;ldquo;定个小目标，先瘦他个十斤！&amp;rdquo; 子舒狠狠的咬下一块鸡肉发出豪言壮语。
周五总能让人变的浮躁，所以我才静下心来随便写点，千万别当真。
[夕阳图]</description>
    </item>
    
    <item>
      <title>出错了，面板运行时发生错误！</title>
      <link>/blog/152.html/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/152.html/</guid>
      <description># 删除之前无法使用的面板环境 rm -rf /www/server/panel/pyenv #重新获取新的面板环境和更新包 curl http://download.bt.cn/install/update_panel.sh|bash </description>
    </item>
    
    <item>
      <title>笔记:vue 中使用 axios 调用数据并渲染</title>
      <link>/blog/151.html/</link>
      <pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/151.html/</guid>
      <description>示例如下。
&amp;lt;template&amp;gt; &amp;lt;div class=&amp;#34;posts&amp;#34;&amp;gt; &amp;lt;div v-for=&amp;#34;item in list&amp;#34; :key=&amp;#34;item.cid&amp;#34; &amp;gt; {{ item.</description>
    </item>
    
    <item>
      <title>新闻:2022年7月8日安倍晋三遭枪击</title>
      <link>/blog/148.html/</link>
      <pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/148.html/</guid>
      <description>2022年7月8日，安倍晋三在街头发表演讲时遭枪击。据奈良市消防局称，遇袭的安倍晋三目前失去意识，心肺停止。嫌疑人41岁男子山上彻也（现住奈良市）随后被控制。
相关报道: https://www.sohu.com/a/565207100_121425542 https://new.qq.com/omn/20220708/20220708A03YIA00.html</description>
    </item>
    
    <item>
      <title>好久没看到这么蓝的天</title>
      <link>/blog/147.html/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/147.html/</guid>
      <description>手机像素一般，更主要的是拍照手法不行，拍不出优美的感觉。</description>
    </item>
    
    <item>
      <title>obsidian:如何使用坚果云进行多端同步?</title>
      <link>/blog/146.html/</link>
      <pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/146.html/</guid>
      <description>接上篇文章 《关于我选择笔记系统这件小事》 ，obsidian 的个人体验很棒，我也打算长久使用作为个人知识库。
但是它有一个弊端，就是本地离线化导致同步是个问题，官方的同步服务很贵，给我劝退了，因此我寻求了其他的同步备份方案，就是今天我要分享的坚果云+ obsidian 。
注册账号 在坚果云官网注册一个账号，选择个人用户，创建账号之后登陆。
点击创建 &amp;gt; 个人同步文件夹，以后就同步这个文件夹内的内容了。这个我在里面新建了一个 test 文件夹。</description>
    </item>
    
    <item>
      <title>人民币小写转大写</title>
      <link>/blog/145.html/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/145.html/</guid>
      <description>一个有趣的demo
this.smalltoBIG(43533534.78)); //肆仟叁佰伍拾叁万叁仟伍佰叁拾肆元柒角捌分 smalltoBIG (n) { var fraction = [&amp;#39;角&amp;#39;, &amp;#39;分&amp;#39;]; var digit = [&amp;#39;零&amp;#39;, &amp;#39;壹&amp;#39;, &amp;#39;贰&amp;#39;, &amp;#39;叁&amp;#39;, &amp;#39;肆&amp;#39;, &amp;#39;伍&amp;#39;, &amp;#39;陆&amp;#39;, &amp;#39;柒&amp;#39;, &amp;#39;捌&amp;#39;, &amp;#39;玖&amp;#39;]; var unit = [ [&amp;#39;元&amp;#39;, &amp;#39;万&amp;#39;, &amp;#39;亿&amp;#39;],[&amp;#39;&amp;#39;, &amp;#39;拾&amp;#39;, &amp;#39;佰&amp;#39;, &amp;#39;仟&amp;#39;] ]; var head = n &amp;lt; 0 ?</description>
    </item>
    
    <item>
      <title>掘金抽奖脚本</title>
      <link>/blog/143.html/</link>
      <pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/143.html/</guid>
      <description>分享一个掘金抽奖的油猴脚本，可以一键签到，抽奖，梭哈。
攒多一点矿石，体验买彩票的感觉。
(async function () { &amp;lsquo;use strict&amp;rsquo;;
const { createApp } = PetiteVue; // 不会吧不会吧，不会还有人不知道petite-vue吧</description>
    </item>
    
    <item>
      <title>usb 接口的三面性</title>
      <link>/blog/142.html/</link>
      <pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/142.html/</guid>
      <description>传统的 usb 接口是一个神奇的物品，当你插入第一次的时候肯定是反方向的，所以你要反过来插第二次，但是结果仍然是插不进去。这个时候你就会发现，它存在第三面，所以当你再次反过来的时候就可以正常插进接口了。
这就是 usb 接口的三面性 😐。
所以为了保护精神和心理不受伤害，请离开传统的 usb ，投入 type-c 的怀抱吧！</description>
    </item>
    
    <item>
      <title>无题</title>
      <link>/blog/134.html/</link>
      <pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/134.html/</guid>
      <description>当情绪破防的时候， 任何事情都是最后一根稻草。
尘埃落定。
&amp;mdash;2022/06/23</description>
    </item>
    
    <item>
      <title>随想录 (6)</title>
      <link>/blog/133.html/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/133.html/</guid>
      <description>随着年龄的增长，越发感觉自我想象力的缺失。
最近迷上了科幻小说，遂找到刘慈欣的小说集，大概二十多篇，花上一周时间研读完毕，只有一种惊艳的感觉，不论是文笔还是世界观架构，都令我着迷。
而大刘作为理工生，将充满浪漫色彩的想象力和严谨的物理学知识相结合，我很佩服。
诗云中对宇宙艺术的理解，是我最喜欢的一篇，文明发展到最后，生存就已经变成了婴孩时期的啼哭，除了怀念已经没有意义了，要追求更高层次的满足，唯有艺术感。
对艺术的追求已经强烈到毁灭银河系，简单粗暴而又充满艺术感。
与诗云一样的还有低温艺术家，描述群体文明的终点是个体文明，也同样没有了生存的追求，整篇充满了艺术彩色。但是对于低层次的文明，生存的追求还是极其必要的。
大刘的文笔是非常浪漫的，将残酷的宇宙以温柔的笔墨书写，而又相对严谨的科学知识，都令我着迷。</description>
    </item>
    
    <item>
      <title>typecho 评论回复艾特评论人</title>
      <link>/blog/132.html/</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/132.html/</guid>
      <description>typecho 在评论时默认是没有 @ 评论人的功能，可以用代码加一下。
在 functions.php 中：
/* * 评论回复时 @ 评论人 */ function get_comment_at($coid) { $db = Typecho_Db::get(); $prow = $db-&amp;gt;fetchRow($db-&amp;gt;select(&amp;#39;parent,status&amp;#39;)-&amp;gt;from(&amp;#39;table.</description>
    </item>
    
    <item>
      <title>随想录 (5)</title>
      <link>/blog/131.html/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/131.html/</guid>
      <description>抽空看完了爱死机第三季，个人感受比第二季优秀，但是还是不如第一季。太过追求三者的结合，科幻与死亡的元素，不够灵活。
但是其中的剧情还是比较精彩的，比如邪神那一集，估计只有了解克苏鲁的人才能看懂，结局也比较贴合剧情走向。女子挖去了眼睛和耳朵，听不到邪神的喃语，才免受精神污染，活着走出危机。（2022/05/26）
bootcss4是一个轻量前端ui框架，最近的项目中用到了它，使用体验还不错，不过功能倒是与element相比弱了一些（2022/05/27）
今天运气不知是好好坏，刚下地铁，就下了毛毛雨。然后一路上四个路口全是绿灯，一口气骑回家，虽然我也穿了雨披，不过还是为自己的运气感到骄傲，很少碰到连续四个绿灯的情况。看来老天都不想让我淋雨，刚在小区停好车，就下大了。（2022/05/31）
最近又步入了雨季，已经记不清这是杭州第几次了，感觉全年都处于下雨天。闷热加潮湿，基本在屋里呆着都要开空调和风扇，不然感觉不透气。所以吃完饭后我喜欢到小区楼下走走，很凉快空气也很清新。（2022/06/02）</description>
    </item>
    
    <item>
      <title>宝塔自动备份网站到邮箱教程</title>
      <link>/blog/130.html/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/130.html/</guid>
      <description>前言 网站经常备份好处就是遇到问题以后可以迅速的恢复，不那么被动，防止信息丢失，操作性很大。虽然搭建一个网站非常容易，但为了应对网络上各种各样的意外情况，避免自己的网站付诸东流，做好网站备份是非常有必要的。
现在邮箱接收都支持附件文件，将网站文件和数据库文件备份到我们自己的邮箱也是一种很好地备份方式，也防止备份文件丢失。
邮箱接收附件文件大小，取决于使用的邮箱服务。一般来说个人博客网站源文件，数据库文件不大，常见邮箱服务都是可以使用的。
下面开始教程，宝塔安装教程可去宝塔官网查看安装教程。
系统环境：CentOS 7.9.2009 x86_64（其他系统可参考方式，命令安装自行解决）
宝塔面板：7.9.0
安装mailx 浏览器登录进入宝塔面板，左侧-》终端。首次使用宝塔终端，需要登录服务器，填写root用户密码后登录。</description>
    </item>
    
    <item>
      <title>一个优雅的字体压缩解决方案fonttools</title>
      <link>/blog/106.html/</link>
      <pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/106.html/</guid>
      <description>分享一个 python 的库 &amp;mdash;fonttools，针对字体文件进行处理非常方便。
下载 需要先在电脑上下载 python 环境，这个就不多说了。
然后在本地命令行输入：
pip install fonttools 字体库 本地新建一个文件夹，取名为 fonts ，随意即可。将自己需要压缩整理的字体放在文件夹中，如 OPPOSans.</description>
    </item>
    
    <item>
      <title>随想录 (4)</title>
      <link>/blog/127.html/</link>
      <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/127.html/</guid>
      <description>好事和坏事总是接踵而至，你永远不知道下一秒会发生什么。但是总有解决的办法，不是吗？但实际上我也不确定。
昨天很晚才睡，想了很多，乱七八糟的。生活哪有容易的事情，就跟摸石头过河一样，跌跌拌拌，最后才找到适合自己生活的模式。（2020/05/09）
coding构建部署同步github好像有bug，搞了半天最后重新刷新 GitHub.com OAuth 认证就好了。（2020/05/10）
昨天一整天都是雨天，我从地铁出来时，雨是朦朦胧胧的，跟雾一样。索性就直接骑着车了，迎面而来的冷空气让我打了个冷战，疲惫的身体清醒了许多。
向前骑去时看到一对情侣，也是晃晃悠悠的骑着电车，女生侧坐着靠在男生的背上。一瞬间有些恍惚，好像是我羡慕的场景。带着心爱的女孩漫无目的的漂游，或许她可以在后座一边搂着我的腰，一边听我讲述生活遇到的趣事或者烦恼。 （2020/05/11）
这两天读了一本新书《菜根谭》，作者是明代洪应明，内容是儒家通俗读物，采儒、佛、道三家思想。</description>
    </item>
    
    <item>
      <title>分享一款自用的 v2ex 主题样式</title>
      <link>/blog/128.html/</link>
      <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/128.html/</guid>
      <description>起因是因为觉得 v2ex 网站主题略有拥挤，阅读体验不好，而正好网站支持自定义 css，所以就在参考其他人的基础上，修改了一套比较美观的样式。
本来是自用的，但是看到有人发帖分享主题，我也索性将它分享出来了。
v2ex 帖子: https://www.v2ex.com/t/851735
Github 仓库: https://github.</description>
    </item>
    
    <item>
      <title>随想录 (3)</title>
      <link>/blog/125.html/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/125.html/</guid>
      <description>五一假期回老家处理一些事情，收拾东西的时候，从角落里翻出来几张老照片，很有怀念意义。（2022/05/03）
好事和坏事总是接踵而至，你永远不知道下一秒会发生什么。但是总有解决的办法，不是吗？（2022/05/05）
整理了一下个人书单，发现读过的书太少了，打算做一个阅读计划，保证持续阅读。
ps: 这周碎碎念很少，因为五一有事出去了，身体和心灵都没停下来，有些疲惫。（2022/05/06）</description>
    </item>
    
    <item>
      <title>docker部署思源笔记</title>
      <link>/blog/124.html/</link>
      <pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/124.html/</guid>
      <description>文章废弃
部署 docker run --name siyuan -itd -p 6806:6806 -v /opt/my_siyuan_path:/opt/siyuan --restart always b3log/siyuan 备份 sudo su # 查看容器列表 docker ps -a # 制作备份 docker commit -p 7409ce6aae7b siyuan_backup # 其中 403e6db0c 是容器id, jenkins_backup是备份名称 # 查看备份是否成功 docker images # 将镜像制作成文件 docker save -o [filename] [image] docker save -o siyuan_backup.</description>
    </item>
    
    <item>
      <title>随想录 (2)</title>
      <link>/blog/122.html/</link>
      <pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/122.html/</guid>
      <description>今天醒的很早，原来以为是失眠，结果是早起，这两天发生的有点多，导致情绪都有些低落，精神萎靡。希望风波赶紧过去，太影响生活了。
（2022/04/25）
很喜欢雨后的阴天，骑着车，微凉的空气扑面而来，清新而舒适，本来早上有些困倦的大脑清醒了很多。
可惜时间很短暂，中午又迎来了焦灼的烈日。
（2022/04/26）
已经连续五天的核酸了，前段时间我还立了个flag，疫情三年仅仅做过两次核酸，结果这一个月就翻了几倍。按照接下来的发展，这种生活还将持续很长时间。
（2022/04/27）
感觉最近停下了学习的步伐，看着零散的知识和技术文档，却又不知道从何下手，那么就开始整理吧，让坚持成为习惯。
（2022/04/28）</description>
    </item>
    
    <item>
      <title>关于我选择笔记系统这件小事</title>
      <link>/blog/121.html/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/121.html/</guid>
      <description>受年龄增长以及生活影响，人接触到的新事物和知识将会越来越多，大脑就显得有些混乱了，我也不敢保证自己的思维会始终保持一个高强度的在线状态。
因此决定整理个人知识库， 将大脑中的片段和思想整理出来。以笔记和文字的形式将他记录下来，但是最近一直在寻求这样的工具，多方对比，也没有一款能真正满足我的需求的工具。
最好是自建的笔记，因为我今天在语雀写了一篇私密笔记，或许因为内容略带敏感吧，然后就被审查了，说我违规。
语雀这是我目前最满意的工具，但是现在对他的热情瞬间降低了很多。我怕哪天一下子账号里面的笔记全部被删了，那样我会很绝望的。
接下来我还会多方对比，最终选择一款平台亦或者是自建的笔记系统。
博客是写给别人看的，笔记是给自己看的，包括一些计划，列表清单等等，都是隐私的内容。还有就是一些文章的草稿，碎片化的记录，所以不宜放在博客上。
而且对于功能方面，我也有较高的要求，比如拖拽，表单，下拉框，卡片等等，都是我比较需要的，隐私和安全性更是我比较看重的。
暂时就这样吧，我会慢慢寻觅。
2022/05/03 更新</description>
    </item>
    
    <item>
      <title>浏览器收藏夹一键填写博客评论信息</title>
      <link>/blog/120.html/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/120.html/</guid>
      <description>先点击收藏一个页面，然后右键它，选择修改，在网址输入框复制下面的js代码，就可以一键填入了。
将其中的昵称，邮箱，网址修改成自己的信息。
目前支持绝大多数主流博客平台和系统，如果发现没有起作用，可以在下面代码里面修改增加一下input的属性。
如果你不会修改的话，可以在评论区留言没有起作用的网站，我可以更新代码。
javascript:void function(){var lauthor=[&amp;#34;#author&amp;#34;,&amp;#34;input[name=&amp;#39;comname&amp;#39;]&amp;#34;,&amp;#34;#inpName&amp;#34;,&amp;#34;input[name=&amp;#39;author&amp;#39;]&amp;#34;,&amp;#34;#ds-dialog-name&amp;#34;,&amp;#34;input[name=&amp;#39;wc_name&amp;#39;]&amp;#34;, &amp;#34;input[name=&amp;#39;nick&amp;#39;]&amp;#34;,],lmail=[&amp;#34;#mail&amp;#34;,&amp;#34;#email&amp;#34;,&amp;#34;input[name=&amp;#39;commail&amp;#39;]&amp;#34;,&amp;#34;#inpEmail&amp;#34;,&amp;#34;input[name=&amp;#39;email&amp;#39;]&amp;#34;,&amp;#34;#ds-dialog-email&amp;#34;,&amp;#34;input[name=&amp;#39;wc_email&amp;#39;]&amp;#34;,&amp;#34;input[name=&amp;#39;mail&amp;#39;]&amp;#34;,],lurl=[&amp;#34;#url&amp;#34;,&amp;#34;input[name=&amp;#39;comurl&amp;#39;]&amp;#34;,&amp;#34;#inpHomePage&amp;#34;,&amp;#34;#ds-dialog-url&amp;#34;,&amp;#34;input[name=&amp;#39;url&amp;#39;]&amp;#34;,&amp;#34;input[name=&amp;#39;wc_website&amp;#39;]&amp;#34;,&amp;#34;input[name=&amp;#39;link&amp;#39;]&amp;#34;,];for(i=0;i&amp;lt;lauthor.length;i++){var author=document.querySelector(lauthor[i]);if(author!=null){author.value=&amp;#39;子舒&amp;#39;;break}}for(j=0;j&amp;lt;lmail.length;j++){var mail=document.querySelector(lmail[j]);if(mail!=null){mail.value=&amp;#39;shuxhan@163.com&amp;#39;;break}}for(k=0;k&amp;lt;lurl.length;k++){var url=document.</description>
    </item>
    
    <item>
      <title>随想录 (1)</title>
      <link>/blog/119.html/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/119.html/</guid>
      <description>正式启动一周碎碎念计划，起因是无意中发现了一个网站，古天乐的博客 。看完之后震撼了，虽然每天都是很简短的一句话，但是一个习惯坚持了12年。
因为我决定仿效他的做法，看看自己是否能坚持足够长的时间。碎片化一些记录，然后通过语雀小记进行记录，最后在每周最后一天工作日总结一下，发布到博客。
（2022/04/20）
很遗憾，之前准备连载的小说，正式宣布烂尾，反思一下问题所在。没有在最可是写好一个大纲，统筹布局，都是一边构思剧情一边写，导致在后来越写越混乱。
地址：https://www.yuque.com/docs/share/8d5456ac-4600-4890-a251-b7648bf48115?# 《夜幕》
（2022/04/21）
千万不要在深夜冲动消费，下了一单又一单，最后又全部取消了，是什么让我克制住了呢？是口袋！
（2022/04/22）</description>
    </item>
    
    <item>
      <title>在宝塔中使用青龙面板代挂京豆</title>
      <link>/blog/116.html/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/116.html/</guid>
      <description>如题所述，想要在闲置的服务器中跑一些服务，青龙面板代挂京豆现存很多开源的脚本，安全性已经经过很多人验证，可以放心使用。
因此我也安排了一个脚本，成功部署之后，就写这篇不算教程的笔记来记录一下整个过程。
Github: https://github.com/6dylan6/jdpro 作者会更新一些部署的指令，如果安装不成功可以对照文档中的指令。
拉取镜像 我是在宝塔中运行服务的，也是非常简单方便。至于怎么安装宝塔，这里就不介绍了，之前写过一篇关于部署宝塔面板的教程，可以点击站内搜索。
如何安装宝塔面板？
需要买服务器可以 点击链接在腾讯云购买服务器有优惠哦~ 不嫖白不嫖，省个十几二十块钱不香吗？</description>
    </item>
    
    <item>
      <title>2022 清明出游</title>
      <link>/blog/113.html/</link>
      <pubDate>Thu, 07 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/113.html/</guid>
      <description>清明过去两天了，由于出去玩了两天，身体很累等原因，再加上工作忙碌所以没有来得及记录。今天略有闲时间，整理一下随笔。
爬山&amp;mdash;杭州半山森林公园 相比于西湖等景点，半山已经算是人非常少的呢，因为疫情原因也不敢去外地太远的地方，万一给隔离就完蛋了，所以就在市内景点挑人少没去过的地方玩了一下。
西溪&amp;mdash;花朝节 &amp;ldquo;迟日江山丽,春风花草香。&amp;rdquo; 一年一度的西溪花朝节，虽然说平时也都经常去，但是借着这个假期和女朋友出来闲逛，也挺舒服，刚好也不热穿着卫衣，漫步在花丛中，别有一番风味。
朋友的猫 </description>
    </item>
    
    <item>
      <title>在nuxt中实现图片放大预览功能</title>
      <link>/blog/112.html/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/112.html/</guid>
      <description>v-viewer 基于vue的一个插件，可以实现图片放大，缩小，旋转，拖拽，预览等各种功能，效果还是很棒的。这是我在Github摸鱼时发现的一个仓库，感觉很有用，就分享一下使用过程。
Github: https://github.com/mirari/v-viewer
1.安装 npm install v-viewer 2.用法 在 plugins 中新建 viewer.</description>
    </item>
    
    <item>
      <title>在vue中制作canvas波浪图</title>
      <link>/blog/111.html/</link>
      <pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/111.html/</guid>
      <description>新建组件 Canvas.vue 。
// @/components/Canvas.vue &amp;lt;template&amp;gt; &amp;lt;div :style=&amp;#34;{ height: waveAllHeight + &amp;#39;px&amp;#39;, background: bgColor }&amp;#34; class=&amp;#34;wave&amp;#34;&amp;gt; &amp;lt;canvas id=&amp;#34;wave1&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;canvas id=&amp;#34;wave2&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;canvas id=&amp;#34;wave3&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; export default { name: &amp;#34;Canvas&amp;#34;, props: { bgColor: { default: &amp;#34;none&amp;#34;, }, // 背景色 waveAllHeight: { default: 160 }, // 波浪的整体高度 waveCount: { default: 2 }, // 波峰个数 waveHeight: { default: 50 }, // 波浪起伏高度 // 波浪颜色 waveColor: { default () { return [ &amp;#34;#f3f3f3&amp;#34;, &amp;#34;#f3f3f3&amp;#34;, &amp;#34;#f3f3f3&amp;#34;, ]; }, }, // 波浪速率 waveTime: { default () { return [4000, 4000, 4000]; }, }, }, data () { return {}; }, mounted () { this.</description>
    </item>
    
    <item>
      <title>增加了站内搜索功能</title>
      <link>/blog/110.html/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/110.html/</guid>
      <description>如题，我花了一个多小时，参照nuxt文档，把搜索功能给加上了，url地址 /search ，记录一下相关代码。
可以选择放在 components/&amp;lt;Search /&amp;gt; 里面，然后引入到 head 模板，也可以单独创建一个页面，我选择的是后者。
新建一个页面模板 /pages/search.</description>
    </item>
    
    <item>
      <title>sql中时间戳转日期</title>
      <link>/blog/107.html/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/107.html/</guid>
      <description>需求: 我将博客和 typecho 后台结合起来，打算做一个在线说说的功能，在 typecho 中输入内容，然后调用接口，实现在我的博客查看说说功能的功能。是不是有点绕？我也这么觉得，但是折腾一下也挺好的。
typecho 导出的数据默认是时间戳格式，那我在前端调用的时候就很麻烦，所以选择在 sql 查询时直接转换，created 是表里面的参数。</description>
    </item>
    
    <item>
      <title>时隔六年我终于换电脑了</title>
      <link>/blog/105.html/</link>
      <pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/105.html/</guid>
      <description>迫于我之前的电脑已经服役了六年，还是高考结束后购买的，一直陪伴我度过了整个青春 ?。 大学时写论文，作业都是通过它。
但是最近越来越严重，主要是屏幕的色域出现了一些问题，大面积发白，很伤眼睛。
其次显卡配置等，虽然凑合一下还能用，但也是很多年前的产物了。显卡、cpu也是不能满足我目前的使用了（主要是现在的游戏太吃配置了），综合考虑我决定让它退休? 。然后在我精挑细选下，选择了惠普暗影精灵7。
我计划是6000-7000之间价位，所以一些高价低配的办公本我直接放弃，主要看的还是游戏本。不要听这个名字，综合来说同等价位的游戏本性能普遍高于办公本，对于我的要求来说是这样。除了体积稍大一些，笨重之外，也没有其他缺点了。
有了预算之后，就可以看品牌了，由于是笔记本，一体的还是买品牌比较稳，小厂商品控和售后不敢保证。我看重的大概有惠普，联想，宏碁这个牌子，里面的暗影精灵，拯救者，暗影骑士等都是性价比相当不错的选择。在反复纠结之后我选择了配有 RTX3050ti 显卡的暗影精灵7。在知乎上看了一些网友的评价，感觉都差不多，然后我就下单了，最主要还是要上机体验一下才知道合不合适。</description>
    </item>
    
    <item>
      <title>“不如吃茶去”</title>
      <link>/blog/104.html/</link>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/104.html/</guid>
      <description>想了很久，也算是结合自己的心境吧，打算正式起一个博客名称，以前子舒的博客，也就是挂着自己的名字，总觉得差点意思。所以现在决定更名为 &amp;lsquo;不如吃茶去&amp;rsquo;。其中含义，听我娓娓道来&amp;hellip;
我是从中学开始接触音乐的，当时喜欢唱歌，会听很多当时流行的歌曲。那时候比较火的最多的还是周杰伦的歌，还有就是林俊杰等歌手。
然后再到初入高中，准确的说应该是初三，开始听许嵩的歌，最开始是《自定义》专辑，每天都听，节奏很有旋律感。为此还专门买了一个mp4，带着一块小屏幕的那种，下载了许嵩的歌，上学放学路上经常会听，包括在上晚自习的时候，也会一边听，一边写作业。
在14年的时候，许嵩正式发布的新专辑《不如吃茶去》，当时的我一听到这里面的歌，一下子就爱上了，从此彻底粉上了许嵩。
我觉得有一句话说的特别好: 许嵩想通过专辑传递出“大千世界有很多想不通的事、猜不透的心与看不透的人，倒不如不想、不猜、不看，携寄情山水的快意人生吃茶去”的淡然态度。
当时年纪还小，单纯的听旋律和歌词。现在回过头来，仔细琢磨里面的话，突然感觉有了新的变化。这世界一直处于变化之中，正如罗翔老师讲的，这世界唯一不变的就是变化本身。
社会纷纷扰扰，心里也有很多杂绪，滋生了很多欲望。但是我也很清楚的知道，有些东西和欲望充其量是被社会气氛所带动的，而我自身不需要那些，过好自己的生活，不被外物所扰。“不以物喜，不以己悲。”
不如吃茶去，我也希望我的心境能同这句话一般，沉淀下来，不想那些太多遥远的东西，立足眼下，把握住身边的美好。</description>
    </item>
    
    <item>
      <title>【笔记】使用php写接口文件调用数据</title>
      <link>/blog/103.html/</link>
      <pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/103.html/</guid>
      <description>如何使用 php 写一个接口，然后将数据以 json 文件格式调用。
&amp;lt;?php header(&amp;#39;Content-Type:application/json; charset=utf-8&amp;#39;); header(&amp;#34;Access-Control-Allow-Origin:*&amp;#34;); $servername = &amp;#34;localhost&amp;#34;; $username = &amp;#34;数据库账号&amp;#34;; $password = &amp;#34;数据库密码&amp;#34;; $dbname = &amp;#34;数据库名称&amp;#34;; // 创建连接 $conn = new mysqli($servername, $username, $password, $dbname); // 检测连接 if ($conn-&amp;gt;connect_error) { die(&amp;#34;连接失败: &amp;#34; .</description>
    </item>
    
    <item>
      <title>Nuxt.js如何部署Artalk和遇到的问题</title>
      <link>/blog/102.html/</link>
      <pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/102.html/</guid>
      <description>花了两天时间，终于把 Artalk 部署好了，一款数据自托管带后端的评论程序，非常适合我。这篇文章就介绍一下我部署的流程，以及我在部署过程中遇到的一些问题，将它记录一下，以便之后研究，顺便对使用 Nuxt.js 搭建博客的伙伴提供一些参考价值。
Artalk 地址: https://artalk.js.org/
这篇文章我将分为三个部分，后端部署、前端部署、问题研究。
1.后端部署 官方有两个版本，注意分辨，php 和 go，对应的是不同的仓库，目前官方文档写的默认都是 go 语言开发的。</description>
    </item>
    
    <item>
      <title>2022新春快乐</title>
      <link>/blog/99.html/</link>
      <pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/99.html/</guid>
      <description>万物更新，旧疾当愈，长安常安。
今日是除夕，极目不见故土，抬头却是一片星空。
今年也是在杭州过的第三个新年，因为疫情的缘故，支持国家防疫政策。
如果所有人都祝你新年快乐，那我祝你历遍山河仍觉得人间值得。
去岁千般皆如意，今年万事定称心。新的一年，愿日子如熹光，温柔又安详，你我赤诚且勇敢，欣喜也在望。
也希望自己能继续不忘初心，一切如少年。</description>
    </item>
    
    <item>
      <title>如何使用谷歌插件为网站注入代码</title>
      <link>/blog/100.html/</link>
      <pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/100.html/</guid>
      <description>在浏览网站时，受限于网站的缺陷，我们通常都会写一些脚本和插件来进行扩展，常规方法有油猴和谷歌插件两种，油猴也是一种插件，使用起来很方便，今天要讲的是如何通过谷歌插件进行注入。
按照结构生成下面几个文件
|chrome-plugin |---manifest.json |---script.js |---favicon.ico 在 manifest.json 中写入代码，这是一个入口文件，声明了插件的基本信息。
default_icon 是插件的图标 matches 是使用的网站，在该域名下的网站才会生效。注意后面要加上 /* js 是引入的文件 // manifest.</description>
    </item>
    
    <item>
      <title>《夜幕》</title>
      <link>/blog/98.html/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/98.html/</guid>
      <description>0. 引言 如果再来一次的话，我不敢保证还会再做出这样的选择。
“悲剧是一种特殊的，无与伦比的喜剧。任何一种事物走到极端时，都会不可避免的朝着反方向前进。所以正确的方法应该是在随着时间的推移中，通过自身的动力以及外在的压力双重作用下，不断修正自己，那句话怎么说来着，是一种缓慢但稳定的螺旋式上升。” 男子响亮而坚定的声音在天花板下回荡。​
1. 悲剧 “威廉·莎士比亚对人性的缺陷有着自己独到的理解和表达方式，这种思想最典型的表现是在戏剧《哈姆雷特》中..”
“哈姆雷特一方面被赋予了为父报仇的重任，另一方面由于其本身存在着性格的缺陷，在关键时刻犹豫不决，错过了最佳时期，”
&amp;hellip;</description>
    </item>
    
    <item>
      <title>读一读柏拉图的《理想国》</title>
      <link>/blog/97.html/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/97.html/</guid>
      <description>最近在读柏拉图的《理想国》，源于罗翔老师的推荐，让我也有一些冲动。也抱着对自己灵魂有一丝净化的作用。让浮躁的内心安静下来。
但是通书有一点诡辩的色彩，所以还是要认真分辨的。不可掉入设置的“陷阱”，就像是生活一般，做事都要对其认识分析，不可一概而信。人都是主观的，每个人读到的内容都是不一样的。
当一个人知道自己将要死亡的时候，会有一种恐慌和忧虑在他的脑子里久久不散，即来世会受到今世所做之恶的惩罚。
以前听这些话就觉得很好笑，但是到了现在我总觉得这话不像是假的，所以便感到疑惑不安，经常回忆自己之前有没有害过什么人。
人之所以到了现在才有这样的忧虑和担心，大概是年纪大了精神衰弱的缘故，又或是像漂泊的孤舟将要抵达岸边，因此对岸上的事物看得更加清晰的缘故。如果知道自己造孽颇深，就会过度悲观，常常会像小孩子从梦中惊醒一样，惊恐万分。
但是那些问心无愧的人，“希望”两个字就是他们心灵的看护神。
正义总是相对的。
我很高兴我已经脱离你们所说的情爱了，这种脱离就像从一个暴君那里脱离苦海一样
读到这里，我只想说一句，“柏拉图误我！”（手动狗头）
如果被你禁止的答案中，有我认为是正确的，即使很危险，我也会使用它。</description>
    </item>
    
    <item>
      <title>Nuxt 项目中如何引入百度统计？</title>
      <link>/blog/96.html/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/96.html/</guid>
      <description>在部署一个网站之后，我们最关心的事情无异于是访问量，以及对它的分析。国内的百度统计是一个不错的选择，基本的功能都是免费的。
只需要在head中引入一串 javascript 代码即可。
&amp;lt;!-- &amp;lt;script&amp;gt; var _hmt = _hmt || []; (function() { var hm = document.</description>
    </item>
    
    <item>
      <title>网易云音乐年度报告分享</title>
      <link>/blog/95.html/</link>
      <pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/95.html/</guid>
      <description>我真的老了吗？看看我的网易云音乐年度报告分享吧！
图片 图片 </description>
    </item>
    
    <item>
      <title>typecho 更换 gravatar 头像源</title>
      <link>/blog/92.html/</link>
      <pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/92.html/</guid>
      <description>找到根目录下 config.inc.php 文件，在最前面加入下面的代码。
define(&amp;#39;__TYPECHO_GRAVATAR_PREFIX__&amp;#39;, &amp;#39;https://sdn.geekzu.org/avatar/&amp;#39;); 其中 https://sdn.geekzu.org/avatar/ 是一个国内源链接，这个是我目前找到的比较稳定的源。
如果这个源不能用了，可以更换其他的源，直接搜其他的相关国内源就可以了。
如果你有其他可以用的头像源，欢迎留言。</description>
    </item>
    
    <item>
      <title>有关 cdn.jsdelivr.net 证书错误的一些想法</title>
      <link>/blog/91.html/</link>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/91.html/</guid>
      <description>记录一次不大不小的事件，2021年12月20日，cdn.jsdelivr.net 国内ip全面崩盘，说是证书出错了，然后所有使用cdn.jsdelivr.net进行加速的资源全部404。
我也是在朋友圈看到的这个消息，上线一看果然全部显示丢失。
对国外资源没有影响，所以这是一次只出现在国内的问题，jsd官网都还在，估计是cdn配置出错，应该很快就可以修复了。
然后，我就开始思考将一些文件资源挂在一些比较可靠的网站是否真的可靠，包括之前使用 Github Pages + Vercel ，也出现过一段时间的证书错误，导出托管的网站崩了两天了，之后官方更换了新的 ip，虽然没什么大问题，但依旧是会有一些断断续续的连接错误404。</description>
    </item>
    
    <item>
      <title>闲谈2021</title>
      <link>/blog/90.html/</link>
      <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/90.html/</guid>
      <description>2021，不知不觉，又过去一年了。
因为最近也比较忙，所以一直拖到了中旬末，现在闲下心准备闲谈一下。 该说不说，坚持写博客也有500多天了，大概是我的水平有限，产出的技术文章也是寥寥无几，大多是一些笔记和一些生活中的琐碎事。
认识了几个一起玩博客的新朋友，优化了一下自己网站，然后帮助别人解决一些力所能及的问题，大家都很友善。
但是感觉今年好像没有做出特别有成就的事情，工作闲暇之余看看新的技术内容，给自己写了几个小项目。
令人烦躁的是，疫情起起落落，难以真正结束，很多想法都被搁置了，旅游计划也是寥寥无几，又是在杭州市内和周边闲逛的一年。当然这也跟我自己有很大的关系。
去年定下的 flag，最终也没有完成，希望来年再接再厉，如果运气不错的话。</description>
    </item>
    
    <item>
      <title>实现图片灯箱功能</title>
      <link>/blog/88.html/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/88.html/</guid>
      <description>写博客必不可少的一个功能就是图片灯箱功能，也就是点击放大查看。但是不同程序的博客所使用的插件也都不一样，我这里研究出一套可以满足绝大部分程序的灯箱插件。已经测试过hexo, hugo, typecho 均无问题。
引入文件 首先引入我们关键的两个文件分别是 zoom.css 和 zoom.js 。</description>
    </item>
    
    <item>
      <title>关于人际交往的礼节感触</title>
      <link>/blog/4.html/</link>
      <pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/4.html/</guid>
      <description>因为一件小事有感而发，在人际交往的过程中，我们通常都会关注一些细节，从而影响对一个人印象。这是一个作为人很正常的行为。
打个比方，两个人聊天，其中一个人不停拿起手机查看，就很给人一种很没有礼貌的印象。假如说有工作要忙，或者其他要处理的事项，这当然另当别论。换个思维，如果真的有那么忙，也不会发生此次社会交互行为活动。所以这是一个悖论了。基本上不存在忙的要命的情况。
我们在社会交往中，大多抱着一种善意的目的，希望从别人那里获得一些“利益”，这里的利益更多指代一中虚拟的情绪，比如开心，愉快，满足等。所以我在平时跟朋友社交，包括并不限于聚餐，出行游玩等，都是将重心放在此次活动中，如果有其他的事情，我都会提前处理安排好，不会影响活动进行。
我想，这是一个正常的人的社交应该有的，一个必需的态度，是一种比较充满正能量，积极向上的态度，如果双方都是如此，我想此次社交行为都将会有一些愉快的体验。
但有句古话说的挺好， “林子大了什么鸟都有”。 你不能保证每个人的社交态度和行为都是一个积极的方向，将其转化为日常说法就是一个人的礼节，你不能确定他(她)真的有礼貌，或者在某些方面冒犯到你。
所以在你感觉到情绪不适，或者对他(她)有什么看法，最佳的做法就是旁敲侧击，看看他(她)是什么有什么重要原因，做出了一些失去礼节的行为，如果真的有原因的话，我都会表示理解。
但是如果真的是性格的方面的问题，导致他(她)一直都是这个样子，我一般也是表示理解，但是往后我会重新审视这个人，是否真的可以有成为好朋友的机会。
个人觉得最基本的礼节还是要有的。</description>
    </item>
    
    <item>
      <title>网易云摸鱼，测测你的听歌流量</title>
      <link>/blog/84.html/</link>
      <pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/84.html/</guid>
      <description>格局刚好。</description>
    </item>
    
    <item>
      <title>这两天的碎碎念</title>
      <link>/blog/83.html/</link>
      <pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/83.html/</guid>
      <description>这段时间双十一，发现没有了往年那种囤货淘宝的欲望了，翻来翻去不知道买什么，包括那些活动，有好多朋友给我发链接助力我都没怎么弄，可能是生活的打磨让我对它没兴趣了吧~~
唯一的消费活动就是买了一台服务器，腾讯云正在做双十一特惠活动，一台2h4g6m的服务器，三年才一百多，个人感觉还是比较划算的，以后可以放一些脚本，跑跑服务啥的，还可以把我的博客挂在上面。
并且购买了一个新的域名 xiabanlo.cn，不过最近正在备案，通过之后就会使用了。坚持，不忘初心！
然后就是突入起来的降温寒潮，虽然提前有了预报，却还是不小心中招了，昨天早上起来喉咙一直痛，想咳嗽。赶紧喝了两杯热水，发现作用不大，依旧是感冒流鼻涕了，不过还好是轻微的。
晚上回到家，把床垫子加厚了，并且换了加绒的被子。像什么毛衣手套啊，也都安排上了，喝两袋999感冒灵，今天感觉舒服多了，看了一眼天气预报，温度貌似还有回升，这就很棒了。
不过早上骑车去地铁的时候，还是有些冷，手套带好，裹得紧紧的。
生活不易，注意身体，防寒保暖~~
中午，吃了一碗雪菜黄鱼面，味道很不错，点个赞！！（唯一的缺点就是有点小贵~~）</description>
    </item>
    
    <item>
      <title>揭秘箭头函数</title>
      <link>/blog/82.html/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/82.html/</guid>
      <description>英文地址: https://javascript.plainenglish.io/demystifying-javascript-arrow-functions-7b2a0908a2b3
通过掘金翻译计划活动进行翻译
箭头函数是函数表达式的替代方法，但在语法上有所不同，不能在所有情况下使用。如果您还没有阅读 JavaScript 中的函数表达式，我建议您在继续阅读之前先阅读这篇文章。
现在，让我们试着从语法、执行、作用域和提升以及代码示例方面来理解箭头函数。
1. 语法 const arrowFunctionSyntax = () =&amp;gt; { console.</description>
    </item>
    
    <item>
      <title>js奇怪的知识--console.table</title>
      <link>/blog/81.html/</link>
      <pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/81.html/</guid>
      <description>这个属性对我来说还真有些陌生，无意中发现的，查询过 MDN 之后听得挺有意思的，就记录一下。
根据字面意思就是“将数据以表格的形式显示”。这个方法需要一个必须参数 data，data 必须是一个数组或者是一个对象；还可以使用一个可选参数 columns。
表格的第一列是 index。如果数据 data 是一个数组，那么这一列的单元格的值就是数组的索引。 如果数据是一个对象，那么它们的值就是各对象的属性名称。 注意（在 FireFox 中）console.</description>
    </item>
    
    <item>
      <title>通过 getTimezoneOffset() 方法判断当前时区是否为夏令时</title>
      <link>/blog/80.html/</link>
      <pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/80.html/</guid>
      <description>getTimezoneOffset() 方法 方法返回 UTC 时间和本地时间之间的时差，以分钟为单位。
世界协调时间 (UTC) 是世界时间标准设定的时间, UTC 时间与 GMT 时间（格林威治时间）相同。</description>
    </item>
    
    <item>
      <title>有关国庆出行的感想</title>
      <link>/blog/79.html/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/79.html/</guid>
      <description>好长时间没回老家了，这次本想借着国庆七天回家一趟，顺便处理一些其他的事情。所以我从9月30日晚，与家人一同驾车回家。
艰难的回家之路 刚上高速跑得很快，原以为已经错开出行高峰期，结果发现是我想多了，不出意外的堵在高速上。
导航呢，这时候也是推荐不走高速，直接从国道走（真的是后悔），然后我们就下了高速，结果这个导航给我整的有点蒙，在临安绕来绕去，11点从杭州出发，凌晨3点还在临安出不去，国道都在堵车，然后没办法只能就地休息，困得实在不行了，其实睡也睡不舒服，跑夜车都是这个样子。
睡到5点多，这时候已经是10月1日了，继续出发，按照导航走，结果走到了一个盘山公路，不知道叫什么山，没注意看。
大概走了3个小时，盘山公路弯弯曲曲的，九转十八弯。不过风景还行，权当安慰自己出来旅游了。
中午才从山里出来，这时候在安徽境内，接近六安。
大家随便弄点泡面吃了吃，继续出发，已经是1号下午了。跑到下午5点多的时候，距离老家还有100公里左右，再来两个小时差不多就到了。结果发生了一些小意外，导致轮胎爆了，然后处理事故到后半夜，修好车也不能走了，身心疲惫，就地开了个宾馆休息，一夜的深度睡眠真的很爽，以后再也不熬夜了，难受死。
早上睡到9点半起，简单收拾一下，10点出发，也没有吃饭，不太饿，打算一口气开回家，也是不负众望，午饭前就赶到县城了。
好久没回家，发现物价真的低，四个人吃的撑死，最后没吃完，把剩下的菜打包带回去，结账也才150左右。不过工资水平也和物价水平差不多，然后就引发了我的一个新的思考，以后是否可以回县城养老。</description>
    </item>
    
    <item>
      <title>使用js随机生成背景颜色</title>
      <link>/blog/78.html/</link>
      <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/78.html/</guid>
      <description>先写一个简单的 html 页面出来
&amp;lt;style&amp;gt; /* ... */ &amp;lt;/style&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;html&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;css&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;js&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; 通过 Math.</description>
    </item>
    
    <item>
      <title>hugo 如何使用 Cusdis ?</title>
      <link>/blog/77.html/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/77.html/</guid>
      <description>Cusdis 是一个界面清爽、注重隐私的轻量级 (~5kb gzip) 评论系统，可以很方便地与 React、Vue 或其他博客系统结合，并且还提供了一个后台来管理所有的评论。
由于 Cusdis 自称是 Disqus 的替代方案，因此它还支持一键从 Disqus 导入、支持邮件通知等功能。</description>
    </item>
    
    <item>
      <title>使用jq做一个数字递增效果</title>
      <link>/blog/76.html/</link>
      <pubDate>Tue, 14 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/76.html/</guid>
      <description>数字递增，顾名思义就是数字不断增加，数字递增的效果就是要一定时间内，让数字有一个增加的特效，一般用于强调某个内容。
用 jquery 也很好处理，大概就是下面这些。
data-to 属性代表最后想要递增到的数值 data-speed 代表数值想要递增的过程时间 class=&amp;quot;num-ber&amp;quot; 和 id=&amp;quot;count-number&amp;quot; 按照这个填入。</description>
    </item>
    
    <item>
      <title>npm install 报错和取消本地代理的问题</title>
      <link>/blog/75.html/</link>
      <pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/75.html/</guid>
      <description>npm install下载依赖包的时候出现下面错误，请求失败。
npm ERR! FetchError: request to https://registry.npm.taobao.org/cnpm failed, reason: connect ECONNREFUSED 127.</description>
    </item>
    
    <item>
      <title>关于我为什么要写博客？</title>
      <link>/blog/74.html/</link>
      <pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/74.html/</guid>
      <description>关于这个博客的构成 这个就放在最前面吗，算是起到一个统计整理的作用。
博客基础的框架使用是 hugo, 前端样式是自己慢慢构思的，可能是因为没有设计师的天分吧，构思出来的 UI 就很奇怪。
我也尽量将色彩往黑白上靠，就是为了避免色彩的冲突造成阅读的不适，以文字为主体，也可以将我的重心转移到写文章上来。
然后通过本地渲染构建了 public 静态文件，我将这些文件推送到服务器上，服务器的配置是最基础的1h2g，不过已经完全可以满足个人正常使用了，这样可以提升访问速度。同时的话，我在 Github 备份了源码，这样就不用害怕如果有什么突发事件。</description>
    </item>
    
    <item>
      <title>将数据库中的图片信息导出并调用</title>
      <link>/blog/73.html/</link>
      <pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/73.html/</guid>
      <description>接口链接：http://121.196.166.173/img/img.php 展示demo：http://121.196.166.173/img
前言 为了写博客以及其他的一些用途，我使用服务器搭建了一个连接 github 仓库的上传网页，并且在数据库中记录上传的信息，比如缩略名、时间戳和图片链接。分别对应 GitHub 仓库中的图片，但是后期我发现在 GitHub 查看图片非常别扭，因此我打算写一个可展示图片的网页，把 GitHub 仓库中的图片通过链接展示出来，当然我们不可能一张张复制，还好有数据库。</description>
    </item>
    
    <item>
      <title>冷知识世界新增一个大洋变成五大洋</title>
      <link>/blog/72.html/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/72.html/</guid>
      <description>从6月8日世界海洋日开始，南大洋将被认定为世界第五大洋。世界上就有七大洲，五大洋啦！中学课文需要改一改了。
美国国家地理学会宣布，南极洲周围海域将被称为南大洋，并正式承认南大洋为地球第五大洋。
南大洋是海洋生态系统的重要家园，也是南半球的焦点。它直接包围着南极洲，从大陆的海岸线一直延伸到南纬 60 度。
海洋的边界与其他四个大洋中的三个相连——大西洋、印度洋和太平洋。但南大洋与其它大洋的不同之处在于，它在很大程度上不是由周围的陆地决定的，而是由于内部有一股洋流，这片水域很独特。</description>
    </item>
    
    <item>
      <title>在 vue 中使用 axios 调用数据</title>
      <link>/blog/71.html/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/71.html/</guid>
      <description>如何在 vue 中完成一次接口的调用？首选就是 axios，方便快捷又好用，支持各种 api ,封装也很方便。
先用 node 安装一下。
npm install axios 然后在 main.</description>
    </item>
    
    <item>
      <title>宝塔如何实现进程守护？</title>
      <link>/blog/70.html/</link>
      <pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/70.html/</guid>
      <description>为了方便写一些东西，pc端和手机端都可以同步，我用leanote搭建了一个在线笔记，但是必须在服务器后台运行一个指令
base run.sh 不然就访问不了端口，我也不可能时刻在终端保持指令运行，所以就需要把指令放在服务器后台，让它自己保持运行，刚好有这么一插件 Supervisor管理器 2.2 。
是一款免费的Python插件，点击下载即可，然后进入设置。
点击添加进程守护。
把进程环境目录和启动命令都填好，名称就随便写个自己能分辨出来的就行，最后点击确定。</description>
    </item>
    
    <item>
      <title>css 中 fixed 定位属性和动画的冲突问题及解决方法</title>
      <link>/blog/69.html/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/69.html/</guid>
      <description>1.问题 css 中使用动画属性会和同标签下的fixed属性冲突，导致定位失效，那么该如何解决他呢？
2.分析 简单说一下问题产生的背景，昨天夜里我想给我的博客页面做一个简单的动画，浏览器刷新的时候从下往上渐现的效果，代码如下：
/* index-container类名是页面的主体部分 */ .index-container { opacity: 0; animation-name: index; animation-duration: 0.</description>
    </item>
    
    <item>
      <title>Oracle数据库安装教程（超详细）</title>
      <link>/blog/68.html/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/68.html/</guid>
      <description>转载自：https://www.moeor.com/26.html
前言 本教程讲解Oracle Database Express Edition (XE) Release 11.2.0.2.0 (11gR2)版本的下载安装教程！</description>
    </item>
    
    <item>
      <title>Typecho博客搭建及优化教程(详细)</title>
      <link>/blog/67.html/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/67.html/</guid>
      <description>1.前言 本文从Typecho 简介开始讲解，其中包括服务器的选择，以及域名注册，服务器系统选择 ，宝塔安装，环境配置，Typecho安装包括中间的防采坑注意事项，为您提供完整的保姆级搭建流程，请珍惜哦！
如果不喜欢前面的啰嗦讲解，请跳过，直接从宝塔安装开始。
不喜勿喷，谢谢！
需要买服务器可以 点击链接在腾讯云购买服务器有优惠哦~ 不嫖白不嫖，省个十几二十块钱不香吗？
2.Typecho简介 Typecho 基于PHP5开发，支持多种数据库，是一款内核强健﹑扩展方便﹑体验友好﹑运行流畅的轻量级开源博客程序。</description>
    </item>
    
    <item>
      <title>网站引入iframe视频，如何实现高度自适应?</title>
      <link>/blog/66.html/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/66.html/</guid>
      <description>我想很多小伙伴在写博客的时候都能遇到一个令人头疼的问题，某一篇文章想用 iframe 引入一个外链视频，但是大小总是有问题，宽度可以固定到 100% ，但是高度比如用实际高度来表示，比如 100px, 200px，诸如此类。
但是问题来了，在不同的页面宽度下，视频的高度是一致的，就会导致一个很麻烦的问题,
看下面两个图，
pc端</description>
    </item>
    
    <item>
      <title>呼吸之野</title>
      <link>/blog/65.html/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/65.html/</guid>
      <description>2021许嵩第8张全创作专辑《呼吸之野》首支曲目《乌鸦》5月7日正式发行。
《乌鸦》 我们都曾领受过误解、怀疑、孤立，都品尝过爱而不得或种种挫败的滋味，都有过觉得“一切都糟透了”的时候……但感伤过后，却还是会相信“一切都会好起来的”，还是会为了反转剧情而振作前行——也许是为了心里最在乎的人，也许是因为心底笃定的信念。被生活不断刮蹭的脆弱羽翼之下，有着强韧的骨架。许嵩以从未讨喜的乌鸦为第一视角，飞抵呼吸之野。
人生不过一场呼吸。呼吸不停，则生命与思考不止。当人们习惯于蒙上口罩生活，畅快呼吸日渐成为一种奢侈。比这更为奢侈的，是袒露真心的酣畅对谈，是呼吸于野，吐纳心声。《呼吸之野》从冷色调里起笔，以自如沉着的笔触，描摹情感与境遇。十首音乐，如十场呼吸冥想般令人全神贯注。许嵩在想象与写实的互照里，在温柔与凛冽的交汇处，在浪漫与生猛的切换中，记述着生活与思考。
在《呼吸之野》里，古典气质与当代元素浑然一体。许嵩构建了有别于其过往作品的音乐语汇，有承接亦有创新。《呼吸之野》是赤诚、饱满且充满细节的，它能够让人在专注聆听时回归内心深处。
为拍摄专辑平面相片及音乐录影带，许嵩与二十余人拍摄团队进驻高原上人迹罕至的原始森林。帐篷帘幕外，旷野篝火，雪山江河，独行旅人，构成一幅冷暖交汇的静谧画卷。
《呼吸之野》专辑10首曲目将于5月7日-5月14日陆续上线!
《假摔》 暴雪天的十字街头，车来人往川流不息，却如临旷野。</description>
    </item>
    
    <item>
      <title>基耶斯洛夫斯基和他的现实</title>
      <link>/blog/64.html/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/64.html/</guid>
      <description>由于博友不在维护博客，导致图片链接丢失，仅以此为纪念。 2023-06-02
文章作者: 江江_Jan
文章链接: https://blog.jannns.com/posts/Kieslowski-and-his-reality/
版权声明: 本博客所有文章除特别声明外，均采用 CC BY-NC-SA 4.</description>
    </item>
    
    <item>
      <title>基于 docsify 搭建一个文档</title>
      <link>/blog/63.html/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/63.html/</guid>
      <description>一、搭建 docsify 是一个类似 vuepress, gitbook 等静态文档程序，但是对比之前，个人还是喜欢 docsify 的风格和源码。不想要那么多附带的功能，能满足写文章，目录的功能就行了。
点击查看demo.
打开终端输入指令，把本地环境搭建起来：</description>
    </item>
    
    <item>
      <title>清明时节雨纷纷</title>
      <link>/blog/62.html/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/62.html/</guid>
      <description>清明时节雨纷纷，路上行人欲断魂。
云栖竹径 </description>
    </item>
    
    <item>
      <title>我的 python 学习笔记</title>
      <link>/blog/61.html/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/61.html/</guid>
      <description>之所以学习 Python ，本意是想写一些脚本之类的程序，用来在浏览器爬一些自己想要的文字，图片等资料，这些程序其实 GitHub 蛮多的，但奈何我对后端的语言一窍不通，直接拿过来给我用我都不会。
因此就萌生了先学习 Python 基础知识的想法，一直听说廖雪峰的 Python 教程写的不错，这次趁着这个机会要好好研读一番。也没想说用的多牛逼，至少希望能为自己浅薄的技术栈再增加一点光彩，毕竟我也曾梦想成为一个全栈开发。</description>
    </item>
    
    <item>
      <title>实时监听页面的变化</title>
      <link>/blog/60.html/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/60.html/</guid>
      <description>问题产生于需求，因为项目需要适配pc和移动端多套布局，所以某些元素在特定的宽度下会产生错位的现象。
如果是在css中，可以很好的判断，使用媒体查询可以实时检测页面的宽度，从而给予标签不同的属性。
@media (max-width:768px){ ... } 在js下可以使用下面这种方法
window.addEventListener(&amp;#39;load&amp;#39;, function() { window.</description>
    </item>
    
    <item>
      <title>ajax 和 js 事件的执行顺序</title>
      <link>/blog/58.html/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/58.html/</guid>
      <description>有一个需求，滚轮滚动到相应位置的时候执行当前的动画，这个动画在footer里面，而网页的主体通过ajax进行渲染，我在js里面调用ajax渲染数据，然后再获取主体的高度，滚动到该高度的时候执行动画。
本地测试了一下没什么问题，该有的效果都有了。放在服务器上测试发现无论怎么写，都是先获取主体的高度，然后才进行数据的渲染。那么必然高度是一个极小的值，不符合我想要的属性。
我大致想了两种解决办法，均以失败告终，本地是ajax先执行，服务器是js先执行。
让获取高度的事件时间延时500ms，发现最后获取不到事件了； 将该事件写在ajax的success回调里面，结果是只有打开网页第一次能够成功，然后不管刷新多少次均无效，事件被屏蔽，所以方法二也被废除； 最后我想到了，ajax不就是一种异步方法，我将其改为同步不就行，先让ajax执行完在执行js事件。
async: false, 我在ajax里面写了async这个方法，false 意思是将其默认为同步获取数据，很好，回到服务器打开控制台，发现是先渲染了数据，才获取了主体的高度，问题得以解决。</description>
    </item>
    
    <item>
      <title>ajax拼接模版字符串的几种方法</title>
      <link>/blog/59.html/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/59.html/</guid>
      <description>起因是因为IE10不兼容es6，所以引发了一系列的问题。
一 使用ajax拼接字符串有很多方法，最简单的莫过于使用es6的语法中的关键符号，
str += `&amp;lt;li class=&amp;#34;wrap-item&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;pic-wrap&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;pic&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;pic-son&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34; ` + item.</description>
    </item>
    
    <item>
      <title>用ajax请求获取数据</title>
      <link>/blog/57.html/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/57.html/</guid>
      <description>通过jquery进行ajax请求数据是一种较为简便的方式，我简单写了一个本地的data.json文件，然后用get请求数据，下面是部分代码
// ajax 请求获取数据 function picShow(){ var str = &amp;#39;&amp;#39;; $.</description>
    </item>
    
    <item>
      <title>IE10的兼容性处理</title>
      <link>/blog/56.html/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/56.html/</guid>
      <description>IE10不支持箭头函数，写js的时候慎用。
IE10下对js的语法要求严格，正常参数后如果没有多余的代码，写个,会报错，如果加了删掉就OK，Chrome下不会产生影响。
zoom属性能不用，尽量别用。我在Chrome使用zoom进行大小调整，放到IE10运行，整个页面都错位了，找半天才想起来之前给一个容器设置了zoom: 1.1;，真是让人头大。
IE10下img标签自带白边，在默认样式里面设置border: none;即可。
img { border: none; } IE10能兼容大部分的html5新标签，唯独不能兼容 main。</description>
    </item>
    
    <item>
      <title>window.scroll 方法只能存在一次该如何解决？</title>
      <link>/blog/55.html/</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/55.html/</guid>
      <description>页面监听是我们经常用的一个功能，下面两个段代码表示两个事件，分别在页面滚动500px和1000px的时候触发，在代码中使用了箭头函数。
window.addEventListener(&amp;#39;scroll&amp;#39;, () =&amp;gt; { var scrollTop = document.documentElement.scrollTop if (scrollTop &amp;gt; 500) { console.</description>
    </item>
    
    <item>
      <title>IE10下`,`符号不能留白</title>
      <link>/blog/54.html/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/54.html/</guid>
      <description>$(&amp;#34;#test&amp;#34;).click(function () { $(&amp;#39;html,body&amp;#39;).animate({ &amp;#39;scrollTop&amp;#39;: &amp;#39;0&amp;#39; }, 500,) }) 这行代码使用的是jquery的写法，一个500毫秒的动画，这样写在Chrome浏览器等没问题，可以正常运行。</description>
    </item>
    
    <item>
      <title>怎么让 css3 里面的动画属性看起来更流畅?</title>
      <link>/blog/53.html/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/53.html/</guid>
      <description>ps：先说点题外话，因为工作的原因很久没更新博客了，最近也是告一段落，处理一了一些事情之后可以安心坐下来，把我的博客重新整理一下。
今天要讲的是 css3 的一个新属性 animation，也算是一个回顾吧，我只是将平时如何使用，以及一些技巧分享出来。如果想学习更基础的内容，可以点击链接：https://www.runoob.com/css3/css3-animations.html，网上类似的教程还是蛮多的。
这篇文章并不细讲动画的基础属性，而是稍微扩展一个话题：怎么让 css3 里面的动画属性看起来更流畅？
当然在讲之前还是要简单介绍一下 animation 基本属性。</description>
    </item>
    
    <item>
      <title>chrome浏览器无法显示12px以下的字体</title>
      <link>/blog/52.html/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/52.html/</guid>
      <description>最近正在面试，遇到了很多有意思的东西，比如今天，在面试前先做了一套面试题，其中有这么一道题，觉得挺有意思，之前也没见过，就打算记录下来：
&amp;lt;!-- chrome浏览器12px字体大小以下无法显示，均显示为12px，应该怎么解决。 --&amp;gt; 我确实有点蒙，在之前写代码的时候，没有遇到过这样的情况，不过既然这样问了，就得想出解决的办法。
首先我想到之前的一个问题，0.5px 的边框该如何实现，通过 scale(0.5) 可以实现，这是 css3 新属性。</description>
    </item>
    
    <item>
      <title>使用宝塔面板安装 autoPicCdn 图床工具</title>
      <link>/blog/51.html/</link>
      <pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/51.html/</guid>
      <description>很多小伙伴在做个人网站或者博客时，总能用到各种各样的图床工具，毕竟在写文章的时候需要插入一些图片，我也不例外，来盘点一下之前用的工具，
最开始是找一些免费的图床网站，比如sm.ms等，但是后来为了安全性和稳定性考虑放弃了这种。 然后是在 github，gitee 仓库存储的（缺点就是github访问速度有些尴尬，gitee其实挺好的，但时用起来怪怪的） 阿里云oss储存桶（挺好使的，搭配picgo软件，一年也才9.9，但是链接很尴尬，直接下载，无法右键访问图片，搜过了解决办法，嫌太麻烦就搁置了，至今在那放着） 后来在自己的服务器建一个网站，把图片放进去，使用的时候直接引用链接（缺点就是上传太麻烦，然后就是图片太占内存了，影响服务器的性能） 然后就是今天的重头戏，autoPicCdn ，一款开源软件 也是基于github实现图床功能，后来才知道可以用 jsdelivr 给资源进行加速，autoPicCdn 就是基于这样的功能实现。</description>
    </item>
    
    <item>
      <title>typecho 博客小表情无法显示问题</title>
      <link>/blog/50.html/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/50.html/</guid>
      <description>typecho 博客建立完成之后，会发现如果插入一些小表情，页面渲染完之后，表情不会显示，并且表情之后的内容全部消失，导致体验感很差。
表情无法显示的原因是 uft-8 编码的问题，无法识别小表情，需要将其改成 utf8mb4
第一步，进入数据库 首先登陆博客后台的数据库，然后点击 sql ，输入下列代码：</description>
    </item>
    
    <item>
      <title>掘金个人主页头像旋转效果</title>
      <link>/blog/49.html/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/49.html/</guid>
      <description>在浏览掘金社区的时候，发现一个很有意思的小彩蛋，在个人主页将鼠标悬浮在头像上，会不停的加速旋转，我感觉挺有意思，f12 看看这个样式怎么写的，发现用到了 css3 的相关技术。
下面是具体代码，img 是头像元素，直接写在 hover 中即可。
img:hover { transform: rotate(666turn); transition-delay: 1s; transition-property: all; transition-duration: 59s; transition-timing-function: cubic-bezier(.</description>
    </item>
    
    <item>
      <title>ES5 和 ES6 的区别？</title>
      <link>/blog/48.html/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/48.html/</guid>
      <description>一、javascript 由三部分组成 1.ECMAScript（核心） 它规定了语言的组成部分：法语，类型，语句，关键字，操作符等等。
2.DOM（文档对象模型） DOM 把整个页面映射为一个多层节点结果，开发人员可借助DOM提供的API，轻松地删除、添加、替换或修改任何节点。
3.BOM（浏览器对象模型） 支持可以访问和操作浏览器窗口的浏览器对象模型，开发人员可以控制浏览器显示的页面以外的部分。
二、什么是ES5？ 作为ECMAScript第五个版本（第四版因为过于复杂废弃了），浏览器支持情况可看第一副图，增加特性如下。</description>
    </item>
    
    <item>
      <title>webpack 的核心概念和构建流程</title>
      <link>/blog/47.html/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/47.html/</guid>
      <description>1.webpack 的核心概念 entry（入口）：一个可执行模块或者库的入口。定义了打包后的入口文件。 output（出口）：指示 webpack 如何去输出，以及在哪里输出。 path: 打包文件存放的绝对路径 publicPath: 网站运行时的访问路径 filename: 打包后的文件名 module（模块）：在 webpack 里，一切皆模块，一个模块对应一个文件。webpack 会从配置的 entry 中开始递归找出所有依赖的模块。 chunk（代码块）：一个 chunk 由多个 模块 组合而成。可以将可执行的模块和他所依赖的模块组合成一个 chunk ，这就是打包。 loader（模块转换器）：用于把一个模块原内容按照需求转换成新的内容。例如：es6 转换为 es5，scss 转换为 css 等。 plugin（扩展）：扩展webpack功能的插件。在webpack构建的生命周期节点上加入扩展hook，添加功能。 2.</description>
    </item>
    
    <item>
      <title>小张厨房日记（二）</title>
      <link>/blog/46.html/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/46.html/</guid>
      <description>自从上次更新厨房日记之后，好像过了两个月多，实际上我一直在进阶我的厨艺，为什么没有更新我的厨房日记呢？因为实际在做的过程中我发现，每种菜的组合太多了，没必要组合一次就写一篇攻略，那样就有些做无用功了，没有太大的意义。
思来想去，我决定了，不再更新做菜的步骤攻略，我想这些攻略网上一抓一大把。把内容着重放在做菜中遇到的一些问题，细节，这样不但可以让我记忆的深刻，还能分享出更多有意思的东西让小伙伴们开心。
今天做了一道菜，红烧茄子，我在茄子的时候发现皮挺硬的，就在想要不要去皮（不要笑我，因为之前没做过茄子）。想了一会没想出个所以然，直接百度一番，“烧茄子要不要去皮？”，第一条搜索结果是这样说的，
“不要。营养专家建议在吃茄子的时候最好不要去皮，因在茄子表皮及表皮与肉质的连接部位，含有大量的有益于人体健康的物质，如芦丁、维生素E、维生素P的含量都隐藏在茄子皮中，如果将茄子皮去掉会降低营养价值。”
嗯，挺好，不用去皮，但是作为百度谷歌资深用户，怎么可能只相信第一条搜索结果呢？我又往下翻了翻，有一条知乎用户是这样说的
茄子去不去皮，关键还是看你做什么菜了。如果是家常茄子，最好是不要去皮；如是是油煎茄子，因为要打花刀的原因，所以也不要去皮；如果是茄子煲，那就非去皮不可了。
略加思考，好像说得有那么几分道理，很是欣喜，所以我就采用了他的说法。今天做的是烧茄子，所以不用去皮，直接炒就可以了。
又增加了一个小技巧。
结束语：当你在心情不好的时候，或者有心事，可以做一些让你分散注意力的事情，就比如说做菜，不仅可以享受食物，享受生活，内心还可以获得成就感，我感觉这是一举两得的事情。</description>
    </item>
    
    <item>
      <title>许嵩的歌又一次被抄袭！</title>
      <link>/blog/45.html/</link>
      <pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/45.html/</guid>
      <description>最新网上爆出风风火火的一件事，许嵩的《有何不可》被抄袭，抄袭者为罗聪，《简单的幸福》。
我从14年开始听许嵩的歌，一直到现在，许多年过去了，他的歌依旧脍炙人口，从之前的抒情浪漫情歌，批判社会的思想，一直到现在具体哲学内涵，中华传统思想。大部分都是包揽作词作曲为一身，真的很有才华。
因为太有才华了，所以被“碰瓷”抄袭。这也算是一场闹剧了。据说嵩哥本人对此没有发表什么看法和言论，一直都是粉丝和公司在发声。
据网友戏称：“许嵩：这要放十年前，我早写歌骂你了。”，“低情商：这不就是抄袭《有何不可》？高情商：你这《有何不可》唱得有点跑调”。
令人没有想象到的事，罗聪所在公司发表声明：
突然感觉有些搞笑，我也不对他再发表什么看法，只希望官方能解决这件事，给我们松鼠一个交代。
要是靠抄袭就能火的话，还要才华做什么。
这也一直是我的理念，在写博客的时候，我也很注重版权，引用别人写的文章的时候，我都会申请作者授权，标明出处。同时，对于我自己的文章，如果你想要引用转载，只需要标明出处即可。
大部分做技术的人应该都是和我抱有一样的想法，喜欢分享，但是可不能张冠李戴，毕竟写文章也是耗费脑细胞的。并不指望能获得什么成绩，只是希望当有人看到你的文章时，解决了自己的问题，有一丝认可足以。
版权一直是一件很重要的事情，很多年前我们还比较淡漠，但是这几年对版权的重视开始慢慢提升了，审查力度增加，这是一件好事。</description>
    </item>
    
    <item>
      <title>基于 React 的富文本编辑器－－Braft Editor</title>
      <link>/blog/44.html/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/44.html/</guid>
      <description>最近发了很多关于 React 的文章，记录遇到的新技术点，以及在写代码过程中遇到的问题，希望可以帮助到和我遇到同样问题的同学。
今天分享的是一款基于 React 的富文本编辑器－－Braft Editor。
Braft Editor 官网：https://braft.margox.cn Github 仓库地址：https://github.</description>
    </item>
    
    <item>
      <title>使用 React 与 Vue 创建同一款 App，差别究竟有多大？</title>
      <link>/blog/43.html/</link>
      <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/43.html/</guid>
      <description>关于 React 框架 和 Vue 框架 的对比，用两者写出同一个程序，对比其代码实现的过程，看看它们的差异究竟有多大？
转载于：https://blog.csdn.net/csdnnews/article/details/81880378 原文：https://medium.com/javascript-in-plain-english/i-created-the-exact-same-app-in-react-and-vue-here-are-the-differences-e9a1ae8077fd 作者简介：Sunil Sandhu，一位 Web 全栈工程师 + 空想家。 译者：安翔，责编：屠敏</description>
    </item>
    
    <item>
      <title>React 脚手架项目打包时的路径问题</title>
      <link>/blog/42.html/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/42.html/</guid>
      <description>create-react-app 脚手架指令可以生成 React 项目，在项目完成之后执行打包命令 npm run build，文件夹内生成 build文件夹，就是打包后的文件，在浏览器运行 index.html 发现页面空白，打开控制台有报错，css 和 js 文件的引用路径有问题。</description>
    </item>
    
    <item>
      <title>如何在 React 中引入 less？</title>
      <link>/blog/41.html/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/41.html/</guid>
      <description>本文主要写如何在 React 中引入 less。因为 less 和 css 非常像，因此很容易学习。而且 less 仅对 css 语言增加了少许方便的扩展，这就是 less 如此易学的原因之一。</description>
    </item>
    
    <item>
      <title>为什么 key 是必须的？</title>
      <link>/blog/40.html/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/40.html/</guid>
      <description>之前有说到，在 React 中渲染列表的时候，要给每一个数据加一个 key 值，赋予一个确定的标示，而且也详细描述了如何给一个标示，方法知道了，那么为什么要这么做呢？
在 React 中如何渲染列表？
在默认条件下，当递归 DOM 节点的子元素时，React 会同时遍历两个子元素的列表；当产生差异时，生成一个 mutation。</description>
    </item>
    
    <item>
      <title>React 学习笔记（三）</title>
      <link>/blog/39.html/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/39.html/</guid>
      <description>来源于：https://react.docschina.org/docs/forms.html
一、表单 在 React 中，html 表单元素的工作方式和其他的 DOM 元素不太一样，因为表单内部通常会保持一些内部的 state，比如下面这个纯 html 表单只接受一个名称：</description>
    </item>
    
    <item>
      <title>2020 年度总结</title>
      <link>/blog/38.html/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/38.html/</guid>
      <description>年度总结这个东西很有意思（我觉得），可以静下心来好好回顾一下这一年做了些什么事情，希望我能养成这个好习惯，多总结。
这个博客是我在年中搭建起来了，到现在也将近半年了，没怎么做过 seo 优化，也没怎么想过推广，就简简单单的写一些自己的东西。更大的原因是我的文笔太拙劣，不敢让人发现，哈哈哈。
大学四年过的还算充实，学到了自己感兴趣的东西，培养的业余兴趣爱好，旅游爬山等，但有名的大山目前只爬了嵩山（河南境内），因为在郑州读的大学。更远的山也没怎么去过，我给自己定个计划，在两年内爬一次泰山，因为工作太忙咯，不敢说短期内一定有时间。想体会一下&amp;quot;会当凌绝顶，一览众山小&amp;quot;的感觉。
但是吧，我的大学结束的有些虎头蛇尾的感觉，因为疫情的原因，学校禁止进入，一直到毕业前夕才允许分批次返校，很多同学都没有看到就草草结束大学生活。所以心心念念的毕业照也没有了，本来和朋友商量好一起拍一组有意思的毕业照，真的是今年最大的遗憾了。
离开校园，见面的机会真的就少了很多，基本都是打打电话，视频什么的，各奔东西，为生活开始忙碌。
2020 年，是让人印象深刻的一年，从一月份爆发的疫情开始，胆战心惊，一直到现在，依旧在全球蔓延，就在前两天看新闻，说英国要严重了，病毒变异，又封城了。真的希望这场疫情赶快过去。
为什么国外对这方面对管控好像没那么严？真的不理解，或许这就是&amp;quot;向往自由&amp;quot;吧。希望地球每个人都能重视起来，共同对抗病毒，早日结束这一场。</description>
    </item>
    
    <item>
      <title>React －－万物皆可组件</title>
      <link>/blog/37.html/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/37.html/</guid>
      <description>一、React 组件是什么？ 组件，从概念上类似于 javascript 函数，他接受任意入参（props），并返回作用于描述页面展示内容的 React 元素。
组件允许你将 UI 拆分为独立可复用的代码片段，并对每个片段进行独立构思。</description>
    </item>
    
    <item>
      <title>javascript 进阶问题</title>
      <link>/blog/36.html/</link>
      <pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/36.html/</guid>
      <description>Github: https://github.com/lydiahallie/javascript-questions
相当不错的一个 Github 仓库，javascript questions ，作者每周都会发布一些有关 javascript 的题目，虽然不难但是考察细节，刷了一会，其实一些很简单的问题，结果因为细节思考不到位直接出错。
引用作者的话：我在我的 Instagram 上每天都会发布 JavaScript 的多选问题，并且同时也会在这个仓库中发布。</description>
    </item>
    
    <item>
      <title>React 学习笔记（二）</title>
      <link>/blog/35.html/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/35.html/</guid>
      <description>React 元素的事件处理和 DOM 元素的很相似，但是有一点语法上的不同
React 事件的命名采用小驼峰式（camelCase），而不是纯小写
使用 JSX 语法时你需要传入一个函数作为事件处理函数，而不是一个字符串
一、事件处理 1.</description>
    </item>
    
    <item>
      <title>吐槽－－控制好自己的情绪</title>
      <link>/blog/34.html/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/34.html/</guid>
      <description>缘于一些小事，本想发在朋友圈里，但是熟人挺多，不方便发，就在博客里吐槽一下
一个正常的人际交往应该是互相传递出好的情绪，开心的事情，这样不但有利于两个人之间的交往，而且对个人对身心健康也是有帮助的
正面的情绪绝对有助于自己的身体和心理健康，反观整体郁郁寡欢，跟别人说自己多不顺，和别人吵架，不好的情绪就传达给另一个人了
并不是说不能找人倾述自己生活的不痛快和不开心，但是作为一个成年人了，应该要把握好那个感觉，不要真把别人当垃圾桶了，什么都往里倒，宣泄
情侣之间亦是如此，再好的关系，如果每天散发着各种压抑的情绪，爆发是迟早的事
家家有本难念的经
每个人都会有自己的烦心事，都能理解，毕竟生活确实很苦闷，但要学会自己调节自己。
我也会经常烦闷，但是我选择做一些爱好的事情来排遣掉自己的不好的情绪，并不会将这些传递给别人，所以我也算过的很开心吧
成年人，不就是要学会自己克制自己的缺点，希望每个人都能生活的很愉快！</description>
    </item>
    
    <item>
      <title>React 中的占位符 Fragment</title>
      <link>/blog/33.html/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/33.html/</guid>
      <description>在 React 项目中，render 方法只能有一个根元素，一般都是 &amp;lt;div&amp;gt; &amp;lt;div/&amp;gt; ，然后在里面写上我们的组件，渲染到浏览器一看，除了我们想要显示的组件，外面还套着一层 div，如果在写项目的时候，套了很多曾组件，那么每一层都会多出来一个父级元素 div，不美观，而且在调整样式的时候会有些麻烦
因此，React 提供了一个占位符 Fragment，写法是：</description>
    </item>
    
    <item>
      <title>为什么不可变性在 React 中那么重要？</title>
      <link>/blog/32.html/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/32.html/</guid>
      <description>根据官网文档来解释，为什么不可变性的概念在 React 中非常重要的原因，一般来说，有两种改变数据的方式。第一种方式是直接修改变量的值，第二种方式是使用新的一份数据替换旧数据
React 文档
一般来说，有两种改变数据的方式。第一种方式是直接修改变量的值，第二种方式是使用新的一份数据替换旧数据
直接修改数据 var player = {score: 1, name: &amp;#39;Jeff&amp;#39;}; player.</description>
    </item>
    
    <item>
      <title>关于 react 的一份学习计划</title>
      <link>/blog/31.html/</link>
      <pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/31.html/</guid>
      <description>有关 react 框架的学习计划，除了之前推荐的 react 开源作者写的学习建议，我还参考了阮一峰的 react 实例教程，写的通俗易懂，又难易并进，可以很快的掌握 react 的核心要点
之前说了，为了公司的项目决定学习 react 框架，看了一份 react.</description>
    </item>
    
    <item>
      <title>webpack 安装配置指令</title>
      <link>/blog/30.html/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/30.html/</guid>
      <description>进行重新加载编译。实际就是将浏览器不认识的语法编译成浏览器认识的语法。比如 less 编译成 css，ES6 语法 转成 ES5 等等。
减少 io 请求，通常我们在请求后，会返回一个 html 到浏览器。这时，我们如果打开控制台，就会发现在 html 页面通过 script,link 等标签引用的静态资源，浏览器会再次发出请求去获取这些资源。但是 webpack 的打包，将所有的静态资源都合并好了，减少了 io 请求。</description>
    </item>
    
    <item>
      <title>vue 学习笔记 (3)－－computed, watch，calss, style</title>
      <link>/blog/29.html/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/29.html/</guid>
      <description>一、计算属性 computed 1.例子 &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;div&amp;gt;{{message}}&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;{{revermessage}}&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; var vm = new Vue({ el: &amp;#39;#app&amp;#39;, data: { message: &amp;#39;hello,wolrd&amp;#39; }, computed: { revermessage: function() { return this.</description>
    </item>
    
    <item>
      <title>vue 学习笔记 (2)－－vue 实例和模板语法</title>
      <link>/blog/28.html/</link>
      <pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/28.html/</guid>
      <description>一、vue 实例 1.创建 vue 实例 一个 vue 实例应该通过new Vue来创建根实例，所有的 vue 组件其实都是 vue 实例</description>
    </item>
    
    <item>
      <title>vue 学习笔记 (1)－－什么是 vue?</title>
      <link>/blog/27.html/</link>
      <pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/27.html/</guid>
      <description>一、什么是 vue? 练习时使用，最新版本
&amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 生产时使用，明确版本号的版本，避免造成不可预见的问题
&amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/vue@2.6.12&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; hello world</description>
    </item>
    
    <item>
      <title>对象，类和接口之间的关系</title>
      <link>/blog/25.html/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/25.html/</guid>
      <description>类是对的类型，类是具有相同属性和方法的一组集合，一个类可以对应多个对象，对象通过他们公开的方法来定义他们与外界的交互行为，而方法就形成了与外界交互的接口
类，对象和接口 1.类和对象 区别：
对象是类的一个实例。就比如一个人，他有具体的属性，身高，体重，姓名等状态，跑步，跳舞等行为 类是抽象的概念，代表一类事物的模版。对一类对象的行为和状态进行描述，抽离出其共性，形成类 关系：
类就是对事物的一种描述，对象是具体存在的一个实例 类是对的类型，类是具有相同属性和方法的一组集合，一个类可以对应多个对象
2.什么是接口？ 对象通过他们公开的方法来定义他们与外界的交互行为，而方法就形成了与外界交互的接口</description>
    </item>
    
    <item>
      <title>vue 使用 cli 脚手架构建项目工程</title>
      <link>/blog/24.html/</link>
      <pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/24.html/</guid>
      <description>vue 使用 cli 脚手架构建项目工程，执行的命令以及遇到的相关的问题
1.下载安装 node 测试一下是否成功安装，
$ node -v // 返回下载的版本号 2.</description>
    </item>
    
    <item>
      <title>react 学习路径－－怎么学习 react？</title>
      <link>/blog/23.html/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/23.html/</guid>
      <description>转载于：https://github.com/petehunt/react-howto，react 开源作者对于 react 框架的一个学习路径的建议，个人感觉还是相当不错的学习路线
如何学习 React? 如果你是一个 React (或者前端) 新手，出于以下的原因，你可能会对这个生态圈感到困惑：</description>
    </item>
    
    <item>
      <title>在 js 中运算不能随便把 value 属性定义成变量</title>
      <link>/blog/22.html/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/22.html/</guid>
      <description>在写一个小 demo 的时候，无意中发现定义变量的时候直接写入 value，会导致获取不到数据，或者获取的不是我们想要的内容，在 js 中运算不能随便把 value 属性定义成变量
先看一段代码
&amp;lt;input type=&amp;#34;text&amp;#34;&amp;#34; id=&amp;#34;a&amp;#34;&amp;gt; &amp;lt;span&amp;gt;*&amp;lt;/span&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;b&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;button&amp;#34; value=&amp;#34;=&amp;#34; onclick=&amp;#34;beto()&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;sub&amp;#34; disabled&amp;gt; &amp;lt;script&amp;gt; function beto() { var a = document.</description>
    </item>
    
    <item>
      <title>事件监听函数，以及事件的捕获和冒泡机制</title>
      <link>/blog/21.html/</link>
      <pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/21.html/</guid>
      <description>事件一般是用于浏览器和用户操作之间的交互，当用户执行某些特殊的操作时，浏览器给予反应，触发绑定的事件，事件流，事件发生时会在元素节点和根节点之间按照约定的顺序传播，事件经过的所有节点都会受到事件的影响，这个传播过程被称为 DOM 事件流
函数事件 事件一般是用于浏览器和用户操作之间的交互，当用户执行某些特殊的操作时，浏览器给予反应，触发绑定的事件
事件流，事件发生时会在元素节点和根节点之间按照约定的顺序传播，事件经过的所有节点都会受到事件的影响，这个传播过程被称为 DOM 事件流
true 是捕获，false 是冒泡，默认为冒泡事件</description>
    </item>
    
    <item>
      <title>getElementBy 系列和 querySelector 系列的区别</title>
      <link>/blog/19.html/</link>
      <pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/19.html/</guid>
      <description>querySelector和querySelectorAll的用法和getElementBy大致一样，获取的时候带上符号，getElementBy 获取的是元素的动态集合，querySelector 获取的是元素的静态集合。
但是需要注意：getElementBy 系列和 querySelector 系列的区别
比如，我们写一个 for 循环，每次获取 li 标签的时候，ul 生成一个 li 子元素</description>
    </item>
    
    <item>
      <title>DOM－－文档对象模型</title>
      <link>/blog/18.html/</link>
      <pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/18.html/</guid>
      <description>DOM 中文名文档对象模型，英文名 Document Object Model，我们简称为 DOM，是针对 html 和 xml 文档的一种 API，将 html 以一种树状结构呈现出来，可以更直观去研究文档结构，我们将这种树状文档结构称为－－DOM 树，或者节点树，一样的概念</description>
    </item>
    
    <item>
      <title>有关 js 函数，方法的一些补充总结</title>
      <link>/blog/17.html/</link>
      <pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/17.html/</guid>
      <description>数据类型，构造函数，原型和原型链的一些讲解补充
一、数据类型 1.5 个基本类型 string number boolean undefined 未定义 null 值为空 symbol 表示一个符号，符号类型是唯一的并且是不可修改的</description>
    </item>
    
    <item>
      <title>为什么 getTime() 返回 1970 年至今的毫秒？</title>
      <link>/blog/16.html/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/16.html/</guid>
      <description>今天在写 new Date() 时候，无意中发现了一个很有意思的方法，getTime()，百度了一下，有人说是计算从 1970 年 1 月 1 日至今的毫秒数</description>
    </item>
    
    <item>
      <title>面向对象编程</title>
      <link>/blog/15.html/</link>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/15.html/</guid>
      <description>面向对象把构成问题的 transaction 分解成各个对象，而建立对象的目的也不是为了完成一个个步骤，而是为了描述某个事物在解决整个问题的过程中所发生的行为，意在写出通用代码，加强代码重用，屏蔽差异性。
一、什么是面向对象编程 js 是基于原型的，基于面向对象编程
面向对象就是把数据和对数据的操作方法放在一起，作为一个整体——对象。对同类对象抽象出其共性，形成类
1.面向过程程序设计 将一个项目（或者一个事件）从头到尾按顺序，一步一步完成，先做什么，后做什么，一直到结束，也是我们人做事的方法。
自上而下，先确定一个整体的框架，然后添砖加瓦，逐步实现想要得到的效果，适用于简单的系统，容易理解。但是难以应对复杂的系统，不易维护扩展，难以复用</description>
    </item>
    
    <item>
      <title>小张厨房日记（更新中...）</title>
      <link>/blog/14.html/</link>
      <pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/14.html/</guid>
      <description>厨房日记，记录我的&amp;rsquo;高光&amp;rsquo;时刻
今日菜谱
莴笋炒肉 准备食材：两根莴笋，一块猪肉，两只青椒
调料：盐，酱油，醋，油，料酒，姜，蒜
炒菜前 10 分钟将猪肉从冰箱取出，放进碗中，用水浸解冻 将莴笋削皮洗净，用刀切成片状 将浸泡解冻好的猪肉取出，切成肉丁 切少许姜和蒜 准备好两根干辣椒 往锅中倒入一勺油，待至烧熟后，将姜和蒜倒入翻炒 将猪肉倒入锅中大火爆炒，并倒入少许料酒和酱油 一到两分钟过后，将莴笋倒入锅中，并添至少许清水防止太干 翻炒时倒入少许醋，盐，并放入干辣椒， 翻炒防止糊锅，静置等待菜熟 没有很复杂的过程，只是细心就可以做出让自己感受舒心的菜</description>
    </item>
    
    <item>
      <title>javascript——函数、变量和方法</title>
      <link>/blog/13.html/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/13.html/</guid>
      <description>当代码出现有规律的重复之后，可以利用函数，定义变量，调用方法，不用去重复的改动代码，只需要进行函数的修改。基本上所有的高级语言都支持函数，javascript 也不例外，它可以像变量一样被使用，方便且强大，因此本文对 js 函数进行系统的学习，并在学习过程中做了详细的笔记以及样例。
一、函数的定义和调用 1.定义函数 function abs(x) { if(x = 0) { return x; } else { return -x; } } function()指出这是一个函数定义 abs是函数的代码 (x)里面的内容是函数的参数 {.</description>
    </item>
    
    <item>
      <title>HTML 事件属性--DOM</title>
      <link>/blog/12.html/</link>
      <pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/12.html/</guid>
      <description>研究 html 的对象，事件和方法，从 js 的角度来思考，这个标签的属性是通过什么方法，触发什么事件来实现的
键盘鼠标事件
页面窗口事件
表单事件
一、window 事件属性 针对 window 对象触发的事件，在&amp;lt;body&amp;gt;中执行</description>
    </item>
    
    <item>
      <title>js 基本语法</title>
      <link>/blog/11.html/</link>
      <pubDate>Wed, 21 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/11.html/</guid>
      <description>在学习 js 基本语法的过程中，把遇见的知识点和问题记录喜下来，以便未来复习和参考。
数据类型有：数据，字符串，数组，数字，布尔值等。
一、数据类型 1.number 2.布尔值 只有 true 和 false 两种，可以直接用 true 和 false 来表达，比如：</description>
    </item>
    
    <item>
      <title>对全栈的一些思考</title>
      <link>/blog/10.html/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/10.html/</guid>
      <description>这里我要推荐一本书，叫做《Web 全栈工程师的自我修养》，在看的过程中，自己也代入进去进行分析，然后写了这篇笔记。
“全栈工程师正在成为 IT 行业的新秀，无论是在上市互联网公司还是在创业公司，都对全栈工程师青睐有加。本书作者是腾讯公 司高级工程师，在前端、后端和 APP 开发方面都有丰富的经验，在本书中分享了全栈工程师的技能与要求、核心竞争力、未来发 展方向、对移动端的思考。除此之外，本书还详细记录了作者从零开始、学习心得。本书内容全面、客观务实适合互联网行业新人、程序员。以及期待技术转型的从业者阅读参考。”
作者余果毕业于西安点击科技大学软件工程学院，曾任腾讯社交用户体验设计部高级 UI 工程师、前端开发负责人，负责多个项目的产品设计，以自身的经历为模板撰写了这本书。</description>
    </item>
    
    <item>
      <title>chrome 浏览器中对 autoplay 的一些处理技巧</title>
      <link>/blog/8.html/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/8.html/</guid>
      <description>我在写博客的时候，想给博客网页添加自己喜欢的音乐，这样我在写作和阅读的时候，心情也会比较愉悦，这个时候，我们就需要用到audio这个标签。
&amp;lt;audio src=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/audio&amp;gt; 同时 audio 标签还带有很多实用的属性，常用的有以下几个：
src &amp;ndash; 这个就不说了，懂的都懂 autoplay &amp;ndash; 如果出现该属性，音频在就绪后马上播放 controls &amp;ndash; 网页中显示音频控件 loop &amp;ndash; 循环播放 muted &amp;ndash; 默认静音 但是我在设置 autoplay 的时候发现，chrome 对自动播放深恶痛绝，直接从根源上限制了这个属性的开启，意思是说，这个属性直接禁用，在打开网页没有交互的情况下，不允许自动播放。</description>
    </item>
    
    <item>
      <title>推荐书籍《CSS 世界》</title>
      <link>/blog/7.html/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/7.html/</guid>
      <description>本书从前端开发人员的需求出发，以“流”为线索，从结构、内容到美化装饰灯方面，全面且深入地讲解前端开发人员必须了解和掌握的大量的 CSS 知识点。同时，作者结合多年的从业经验，通过大量的实战案例，详尽解析 CSS 的相关知识与常见问题。
作者还为本书开发了专门的配套网站，进行实例展示。问题答疑。作为一本 CSS 深度学习的书，书中介绍大量许多前端开发人员都不知道的 CSS 知识点。通过阅读本书，读者会对 CSS 世界的深度和广度有一个全新的认识。</description>
    </item>
    
    <item>
      <title>文字溢出隐藏以及和flex冲突的问题</title>
      <link>/blog/6.html/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/6.html/</guid>
      <description>在某些段落中，页面要求文字只显示一行，但是width固定，而文字过长，就会出现一个需求，超过长度限制的文字被隐藏且显示省略号，css 支持这样的属性。
单行文本溢出隐藏
div{ overflow: hidden; white-space: nowrap; text-overflow: ellipsis; } 多行文本溢出隐藏</description>
    </item>
    
    <item>
      <title>vue 生命周期</title>
      <link>/blog/5.html/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/5.html/</guid>
      <description>学习 vue 中一个非常重要的领域，就是生命周期，它包含了很多的内容。每个 vue 实例在被创建的时候都要经历一系列的初始化过程，这个过程就是 vue 的生命周期。
每个 vue 实例在被创建的时候都要经过一系列的初始化过程——例如，需要把设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等，我们要把这一系列的过程称为组件的生命周期（组件从注册到销毁的整个过程）。我们有时候需要在组件生命周期的某个过程中，执行某些代码，基于此，vue 提供了生命周期钩子函数，给了用户在不同阶段添加自己的代码的机会。</description>
    </item>
    
    <item>
      <title>hello, world</title>
      <link>/blog/1.html/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/1.html/</guid>
      <description>2020 年 6 月 14 日
我的博客正式建立。
愿一切安好。</description>
    </item>
    
    <item>
      <title>2023 下半年计划单</title>
      <link>/plan2023-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/plan2023-2/</guid>
      <description> 骑行 1000 公里 读 5 本书 2/5 爬 1 座名山 </description>
    </item>
    
    <item>
      <title>关于</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>欢迎来到我的个人网站，记录了一些个人心得和笔记，并且分享有趣的生活。
1.个人介绍 const author = { name: &amp;#39;子舒&amp;#39;, age: 24, tags: [&amp;#39;前端程序员&amp;#39;, &amp;#39;独立博客作者&amp;#39;, &amp;#39;骑行爱好者&amp;#39;, &amp;#39;摄影爱好者&amp;#39;, &amp;#39;INFJ 人格&amp;#39;], adress: &amp;#39;杭州&amp;#39;, email: &amp;#39;anghunk@gmail.</description>
    </item>
    
    <item>
      <title>实验室</title>
      <link>/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/lab/</guid>
      <description>记录我订阅的周刊，质量不错，内容挺有意思。如果你有推荐，欢迎在评论区分享。
(以下排名不分先后，仅以记录的先后顺序。)
周刊
1. DecoHack 周刊
https://decohack.zhubai.love/
为独立创造者提供独立见解，帮助你发现新产品方向，启动和完善你的项目。
2. 好工具周刊</description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/search/</guid>
      <description></description>
    </item>
    
    <item>
      <title>标签</title>
      <link>/tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tags/</guid>
      <description></description>
    </item>
    
    <item>
      <title>留言板</title>
      <link>/message/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/message/</guid>
      <description>哎呀，终于有人来啦！欢迎欢迎！这里是留言板，也是一个充满奇思妙想的地方。
有什么想说的都可以在这里留下你的足迹，就像小动物在树上留下酷炫的手印一样！</description>
    </item>
    
    <item>
      <title>骑行</title>
      <link>/riding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/riding/</guid>
      <description>坐骑：捷安特 atx620.
2023 年统计 月份 里程（km） 10 月 190 9 月 232 8 月 276 7 月 352 6 月 197 总里程 1247 出门运动注意安全，保持水分补充。</description>
    </item>
    
  </channel>
</rss>
