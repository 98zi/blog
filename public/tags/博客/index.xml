<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>博客 on 子舒的博客</title>
    <link>https://zishu.me/tags/%E5%8D%9A%E5%AE%A2/</link>
    <description>Recent content in 博客 on 子舒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 May 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://zishu.me/tags/%E5%8D%9A%E5%AE%A2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>hugo 纯静态编写一个字数统计脚本</title>
      <link>https://zishu.me/blog/194.html/</link>
      <pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/194.html/</guid>
      <description>早上起来的时候看到微信群中有博友分享自己的建站时间，聊着聊着说到总字数上面，这时我才发现我的网站没有统计的地方，索性就自己写一个吧，因为是静态博客，所以不涉及后端、服务器等，只用前端的方式来解决。 这里需要借助我之前的一篇文章，《用原生 js 给网</description>
    </item>
    <item>
      <title>博客运行 1000 天了</title>
      <link>https://zishu.me/blog/188.html/</link>
      <pubDate>Fri, 10 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/188.html/</guid>
      <description>使用 openai 生成。 [大漠孤烟直，长河落日圆] 不知不觉，已经坚持写博客 1000 天了，从 2020 年 6 月 14 日开始，第一次踏入这个圈子。最开始我还会写一些技术类的文章，但随着时间的推移，这意义不大，因为类似的文章在互联网都能找到一大把，因此我放弃这种类型文章的写作。</description>
    </item>
    <item>
      <title>hugo 一键打包并上传 github</title>
      <link>https://zishu.me/blog/170.html/</link>
      <pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/170.html/</guid>
      <description>分享一个 hugo 一键打包并上传 github 的方法，前提是你之前上传过 GitHub 仓库。 采用 window 支持的 sh 可执行文件，在根目录新建一个 hugo.sh 文件，里面放上一些命令。 hugo # cd public time=$(date &amp;#34;+%Y-%m-%d %H:%M:%S&amp;#34;) echo $time git add . git commit -m &amp;#34;自动执行构建脚本 🎓$time&amp;#34; git push exit 可以在文件夹双击运行 hugo</description>
    </item>
    <item>
      <title>typecho 评论回复艾特评论人</title>
      <link>https://zishu.me/blog/132.html/</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/132.html/</guid>
      <description>typecho 在评论时默认是没有 @ 评论人的功能，可以用代码加一下。 在 functions.php 中： /* * 评论回复时 @ 评论人 */ function get_comment_at($coid) { $db = Typecho_Db::get(); $prow = $db-&amp;gt;fetchRow($db-&amp;gt;select(&amp;#39;parent,status&amp;#39;)-&amp;gt;from(&amp;#39;table.comments&amp;#39;) -&amp;gt;where(&amp;#39;coid = ?&amp;#39;, $coid)); $mail = &amp;#34;&amp;#34;; $parent = @$prow[&amp;#39;parent&amp;#39;]; if ($parent != &amp;#34;0&amp;#34;) { $arow = $db-&amp;gt;fetchRow($db-&amp;gt;select(&amp;#39;author,status,mail&amp;#39;)-&amp;gt;from(&amp;#39;table.comments&amp;#39;) -&amp;gt;where(&amp;#39;coid = ?&amp;#39;, $parent)); @$author = @$arow[&amp;#39;author&amp;#39;]; $mail = @$arow[&amp;#39;mail&amp;#39;]; if(@$author &amp;amp;&amp;amp; $arow[&amp;#39;status&amp;#39;] == &amp;#34;approved&amp;#34;){ if (@$prow[&amp;#39;status&amp;#39;] == &amp;#34;waiting&amp;#34;){ echo &amp;#39;&amp;lt;p class=&amp;#34;commentReview&amp;#34;</description>
    </item>
    <item>
      <title>浏览器收藏夹一键填写博客评论信息</title>
      <link>https://zishu.me/blog/120.html/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/120.html/</guid>
      <description>先点击收藏一个页面，然后右键它，选择修改，在网址输入框复制下面的 js 代码，就可以一键填入了。 将其中的昵称，邮箱，网址修改成自己的信息。 目前支持绝大多数主流博客平台和系统，如果发现没有起作用，可以在下面代码里面修改增加一下 input 的属性。 如果你不会修</description>
    </item>
    <item>
      <title>增加了站内搜索功能</title>
      <link>https://zishu.me/blog/110.html/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/110.html/</guid>
      <description>如题，我花了一个多小时，参照 nuxt 文档，把搜索功能给加上了，url 地址 /search ，记录一下相关代码。 可以选择放在 components/&amp;lt;Search /&amp;gt; 里面，然后引入到 head 模板，也可以单独创建一个页面，我选择的是后者。 新建一个页面模板 /pages/search.vue 。 &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;HeaderMe /&amp;gt; &amp;lt;div class=&amp;#34;wrapper&amp;#34;&amp;gt; &amp;lt;PageSidebar /&amp;gt; &amp;lt;div class=&amp;#34;archive&amp;#34;&amp;gt; &amp;lt;h2&amp;gt;{{ article.attributes.title }}&amp;lt;/h2&amp;gt; &amp;lt;div class=&amp;#34;article-content markdown-body&amp;#34; v-html=&amp;#34;article.html&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;search&amp;#34;&amp;gt; &amp;lt;input v-model=&amp;#34;searchQuery&amp;#34; type=&amp;#34;search&amp;#34; autocomplete=&amp;#34;off&amp;#34; pla</description>
    </item>
    <item>
      <title>“不如吃茶去”</title>
      <link>https://zishu.me/blog/104.html/</link>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/104.html/</guid>
      <description>想了很久，也算是结合自己的心境吧，打算正式起一个博客名称，以前子舒的博客，也就是挂着自己的名字，总觉得差点意思。所以现在决定更名为 &amp;lsquo;不如吃茶去&amp;rsquo;。其中含义，听我娓娓道来&amp;hellip; 我是从中学开始接触音乐的，当时喜</description>
    </item>
    <item>
      <title>Nuxt.js 如何部署 Artalk 和遇到的问题</title>
      <link>https://zishu.me/blog/102.html/</link>
      <pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/102.html/</guid>
      <description>花了两天时间，终于把 Artalk 部署好了，一款数据自托管带后端的评论程序，非常适合我。这篇文章就介绍一下我部署的流程，以及我在部署过程中遇到的一些问题，将它记录一下，以便之后研究，顺便对使用 Nuxt.js 搭建博客的伙伴提供一些参考价值。 Artalk 地址：https://a</description>
    </item>
    <item>
      <title>Nuxt 项目中如何引入百度统计？</title>
      <link>https://zishu.me/blog/96.html/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/96.html/</guid>
      <description>在部署一个网站之后，我们最关心的事情无异于是访问量，以及对它的分析。国内的百度统计是一个不错的选择，基本的功能都是免费的。 只需要在 head 中引入一串 javascript 代码即可。 &amp;lt;!-- &amp;lt;script&amp;gt; var _hmt = _hmt || []; (function() { var hm = document.createElement(&amp;#34;script&amp;#34;); hm.src = &amp;#34;https://hm.baidu.com/hm.js?xxxxxxxxxxxxxxxxxxx&amp;#34;; var s = document.getElementsByTagName(&amp;#34;script&amp;#34;)[0]; s.parentNode.insertBefore(hm, s); })(); &amp;lt;/script&amp;gt; --&amp;gt; 上面是百度提供的统计代码，需要放在</description>
    </item>
    <item>
      <title>实现图片灯箱功能</title>
      <link>https://zishu.me/blog/88.html/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/88.html/</guid>
      <description>写博客必不可少的一个功能就是图片灯箱功能，也就是点击放大查看。但是不同程序的博客所使用的插件也都不一样，我这里研究出一套可以满足绝大部分程序的灯箱插件。已经测试过 hexo, hugo, typecho 均无问题。 引入文件 首先引入我们关键的两个文件分别是 zoom.css 和 zoom.js 。 &amp;lt;!-- head 头部 --&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34;</description>
    </item>
    <item>
      <title>hugo 如何使用 Cusdis ?</title>
      <link>https://zishu.me/blog/77.html/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/77.html/</guid>
      <description>Cusdis 是一个界面清爽、注重隐私的轻量级 (~5kb gzip) 评论系统，可以很方便地与 React、Vue 或其他博客系统结合，并且还提供了一个后台来管理所有的评论。 由于 Cusdis 自称是 Disqus 的替代方案，因此它还支持一键从 Disqus 导入、支持邮件通知等功能。 官方地址：https://cu</description>
    </item>
    <item>
      <title>关于我为什么要写博客？</title>
      <link>https://zishu.me/blog/74.html/</link>
      <pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/74.html/</guid>
      <description>关于这个博客的构成 这个就放在最前面吗，算是起到一个统计整理的作用。 博客基础的框架使用是 hugo, 前端样式是自己慢慢构思的，可能是因为没有设计师的天分吧，构思出来的 UI 就很奇怪。 我也尽量将色彩往黑白上靠，就是为了避免色彩的冲突造成阅读的不适，以文字为主</description>
    </item>
    <item>
      <title>Typecho 博客搭建及优化教程 (详细)</title>
      <link>https://zishu.me/blog/67.html/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/67.html/</guid>
      <description>1.前言 本文从Typecho 简介开始讲解，其中包括服务器的选择，以及域名注册，服务器系统选择，宝塔安装，环境配置，Typecho 安装包括中间的防采坑注意事项，为您提供完整的保姆级搭建流程，请珍惜哦！ 如果不喜欢前面的啰嗦讲解，请跳过，直接从宝</description>
    </item>
    <item>
      <title>网站引入 iframe 视频，如何实现高度自适应？</title>
      <link>https://zishu.me/blog/66.html/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/66.html/</guid>
      <description>我想很多小伙伴在写博客的时候都能遇到一个令人头疼的问题，某一篇文章想用 iframe 引入一个外链视频，但是大小总是有问题，宽度可以固定到 100% ，但是高度比如用实际高度来表示，比如 100px, 200px，诸如此类。 但是问题来了，在不同的页面宽度下，视频的高度是一致的，</description>
    </item>
    <item>
      <title>typecho 博客小表情无法显示问题</title>
      <link>https://zishu.me/blog/50.html/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/50.html/</guid>
      <description>typecho 博客建立完成之后，会发现如果插入一些小表情，页面渲染完之后，表情不会显示，并且表情之后的内容全部消失，导致体验感很差。 表情无法显示的原因是 uft-8 编码的问题，无法识别小表情，需要将其改成 utf8mb4 第一步，进入数据库 首先登陆博客后台的数据库，然后点击 sq</description>
    </item>
  </channel>
</rss>
