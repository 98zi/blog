<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on 子舒的博客</title>
    <link>/tags/github/</link>
    <description>Recent content in github on 子舒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 09 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub生成一个新的ssh密钥</title>
      <link>/blog/187.html/</link>
      <pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/187.html/</guid>
      <description>&lt;p&gt;要在GitHub上生成新的SSH密钥，请按照以下步骤操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开终端或命令提示符。&lt;/li&gt;
&lt;li&gt;输入以下命令：将&amp;quot;your_&lt;a href=&#34;mailto:email@example.com&#34;&gt;email@example.com&lt;/a&gt;&amp;quot;替换为您在GitHub上注册的电子邮件地址。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh-keygen -t rsa -b &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; -C &lt;span class=&#34;s2&#34;&gt;&amp;#34;your_email@example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;稍后您将被提示输入文件保存位置和密码短语。您可以保持所有默认设置，只需一直按Enter键即可。&lt;/li&gt;
&lt;li&gt;然后输入以下命令：eval &amp;ldquo;$(ssh-agent -s)&amp;rdquo;&lt;/li&gt;
&lt;li&gt;然后输入以下命令以将新密钥添加到ssh-agent中：ssh-add ~/.ssh/id_rsa&lt;/li&gt;
&lt;li&gt;最后，请在GitHub上添加您的公共密钥。 转到GitHub设置并单击&amp;quot;SSH and GPG keys &amp;ldquo;(&amp;ldquo;SSH和GPG密钥&amp;rdquo;）。&lt;/li&gt;
&lt;li&gt;单击“新密钥”按钮。&lt;/li&gt;
&lt;li&gt;在“标题”字段中输入一个描述性标题，以便您可以识别此密钥。&lt;/li&gt;
&lt;li&gt;在“密钥”字段中，将“~/.ssh/id_rsa.pub”文件中的内容复制并粘贴到文本框中。&lt;/li&gt;
&lt;li&gt;单击“添加SSH密钥”按钮以保存您的新密钥。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在，您已经成功为GitHub生成了一个新的SSH密钥！&lt;/p&gt;
&lt;p&gt;来自 chatGPT 的教程，记录一下。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>安装一个基于 Github 的静态图床程序</title>
      <link>/blog/172.html/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/172.html/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;demo: &lt;a href=&#34;https://img.zburu.com/&#34;&gt;https://img.zburu.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天分享一下如何使用 Github 作为图床，首先就要推荐这个工具 picx 。&lt;/p&gt;
&lt;p&gt;Github 仓库: &lt;a href=&#34;https://github.com/XPoet/picx&#34;&gt;https://github.com/XPoet/picx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文的图片全部使用该工具上传，然后通过 Staticaly 进行cdn加速（这个在上传的时候自动生成链接。）&lt;/p&gt;
&lt;p&gt;可以设置自动压缩、转码成 webp 格式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基于 GitHub API 开发的具有 CDN 加速功能的图床管理工具。无需下载与安装，网页端在线使用！免费！稳定！便捷！极速！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看了一下源码，vue 写的，全部都是纯静态化加上本地存储，所以说没有后端。&lt;/p&gt;
&lt;p&gt;也就是说我们也可以部署在自己域名下，不使用开发者提供的域名，虽然这么做没什么区别，但还是折腾一下吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我会在最后提供一个打包好的链接（直接打包源码，不做任何修改），下载后自行上传到域名空间下即可使用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgurl.zishu.me/images/2022/20221022-1.2zpfhu4mgl40.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;说明文档：&lt;a href=&#34;https://picx-docs.xpoet.cn/tutorial/get-start.html&#34;&gt;https://picx-docs.xpoet.cn/tutorial/get-start.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是官方说明，试用了一下，效果很棒。图床如何使用文档中标注的很清晰，我就不赘述了，本文只介绍如何编译打包，面向群友。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;过程很简单，需要提前准备好node环境。&lt;/p&gt;
&lt;h3 id=&#34;1下载源码&#34;&gt;1.下载源码 &lt;a href=&#34;#1%e4%b8%8b%e8%bd%bd%e6%ba%90%e7%a0%81&#34; class=&#34;anchor&#34;&gt;🔗&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;直接去 &lt;a href=&#34;https://github.com/XPoet/picx&#34;&gt;https://github.com/XPoet/picx&lt;/a&gt; ，然后 Download Zip。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgurl.zishu.me/images/2022/20221022-2.707drdl2ifs0.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2执行命令&#34;&gt;2.执行命令 &lt;a href=&#34;#2%e6%89%a7%e8%a1%8c%e5%91%bd%e4%bb%a4&#34; class=&#34;anchor&#34;&gt;🔗&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;下载后解压来到这个页面，然后在空白处鼠标右键，打开终端。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgurl.zishu.me/images/2022/20221022-3.34jbfy4mtbq0.webp&#34; alt=&#34;1666401948613&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgurl.zishu.me/images/2022/20221022-4.1c6nn69wefgg.webp&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你已经有node环境了，直接执行下面命令就可以，如果没有，先去安装一下 node 环境，这里就假设环境安装好了 。（&lt;a href=&#34;https://nodejs.org/zh-cn/&#34;&gt;https://nodejs.org/zh-cn/&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;下面这两种方式都可以，没有区别。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 这个过程因为网速问题可能比较慢&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yarn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;依赖安装之后，就开始构建。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 构建&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm run build
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yarn build
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;构建完成之后就会生成一个 &lt;code&gt;dist&lt;/code&gt; 文件夹，这就是打包好后的文件，里面有一个 &lt;code&gt;index.html&lt;/code&gt; 和其他静态资源。&lt;/p&gt;
&lt;h3 id=&#34;3我应该上传到哪里&#34;&gt;3.我应该上传到哪里？ &lt;a href=&#34;#3%e6%88%91%e5%ba%94%e8%af%a5%e4%b8%8a%e4%bc%a0%e5%88%b0%e5%93%aa%e9%87%8c&#34; class=&#34;anchor&#34;&gt;🔗&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;这个时候只需要将他们上传到你想要访问的域名目录下即可。&lt;/p&gt;
&lt;p&gt;比如我使用的是 hugo 博客程序，先在 &lt;code&gt;content&lt;/code&gt; 下新建一个文件夹，命名为 &lt;code&gt;img&lt;/code&gt;，（你可以起任何名字，注意不要和其他文件名冲突即可。）
然后把 &lt;code&gt;dist&lt;/code&gt; 文件夹下的所有文件全部复制到 &lt;code&gt;/content/img/&lt;/code&gt; 文件夹下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgurl.zishu.me/images/2022/20221022-5.3bs1ti6xhki0.webp&#34; alt=&#34;1666402810476&#34;&gt;&lt;/p&gt;
&lt;p&gt;这样在执行 hugo 命令后会打包到 &lt;code&gt;public&lt;/code&gt; 文件夹下，然后直接访问 &lt;a href=&#34;https://zburu.com/img&#34;&gt;https://zburu.com/img&lt;/a&gt; 就可以打宝图床。&lt;/p&gt;
&lt;p&gt;或者你自己上传到任何你想放的空间下都可以，没有限制~~&lt;/p&gt;
&lt;p&gt;图床如何使用对着文档琢磨即可，上面写的很详细。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://picx-docs.xpoet.cn/tutorial/get-start.html&#34;&gt;https://picx-docs.xpoet.cn/tutorial/get-start.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;4其他问题&#34;&gt;4.其他问题 &lt;a href=&#34;#4%e5%85%b6%e4%bb%96%e9%97%ae%e9%a2%98&#34; class=&#34;anchor&#34;&gt;🔗&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如果后面开发者更新图床版本，可以从第一步重新操作，下载、构建、上传。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果有其他问题，请在评论区留言~~&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
