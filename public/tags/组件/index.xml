<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>组件 on 子舒的博客</title>
    <link>https://zishu.me/tags/%E7%BB%84%E4%BB%B6/</link>
    <description>Recent content in 组件 on 子舒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://zishu.me/tags/%E7%BB%84%E4%BB%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于 React 的富文本编辑器－－Braft Editor</title>
      <link>https://zishu.me/blog/44.html/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/44.html/</guid>
      <description>最近发了很多关于 React 的文章，记录遇到的新技术点，以及在写代码过程中遇到的问题，希望可以帮助到和我遇到同样问题的同学。 今天分享的是一款基于 React 的富文本编辑器－－Braft Editor。 Braft Editor 官网：https://braft.margox.cn Github 仓库</description>
    </item>
    <item>
      <title>React －－万物皆可组件</title>
      <link>https://zishu.me/blog/37.html/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/37.html/</guid>
      <description>一、React 组件是什么？ 组件，从概念上类似于 javascript 函数，他接受任意入参（props），并返回作用于描述页面展示内容的 React 元素。 组件允许你将 UI 拆分为独立可复用的代码片段，并对每个片段进行独立构思。 1.创建一个组件 // 函数组件 function Welcome(props) { return &amp;lt;h1&amp;gt;Hello, {props.name}&amp;lt;/h1&amp;gt;; } // class 组件 class</description>
    </item>
  </channel>
</rss>
