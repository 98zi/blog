<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网站 on 子舒的博客</title>
    <link>/tags/%E7%BD%91%E7%AB%99/</link>
    <description>Recent content in 网站 on 子舒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E7%BD%91%E7%AB%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用原生js给网站写个搜索功能</title>
      <link>/blog/189.html/</link>
      <pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/189.html/</guid>
      <description>本文也算是一篇教程，可以给 hugo 网站加个搜索功能，并且实现热更新，体验感更好。
如果是其他程序，只需要按照特定的模板生成以下格式的文件即可，主要代码从 第2部分 开始，第一章节写的是如何用 hugo 输出文章列表 json 文件。
title 是文章标题，permalink 是文章链接。
[{ &amp;#34;permalink&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;&amp;#34; }, { &amp;#34;permalink&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;&amp;#34; }] 1. hugo模板生成文章列表json文件 在 layouts 文件夹下新建 index.json 文件，模板内容如下：
其中第2行最后面的 &amp;quot;blog&amp;quot; 是你文章文件夹的名称。大部分是 posts 等等，这里是我个人的名称。
{{- $.Scratch.Set &amp;#34;posts&amp;#34; slice -}} {{- range where .Site.RegularPages &amp;#34;Type&amp;#34; &amp;#34;blog&amp;#34; -}} {{- $.Scratch.Add &amp;#34;posts&amp;#34; (dict &amp;#34;title&amp;#34; .Title &amp;#34;permalink&amp;#34; .Permalink) -}} {{- end -}} {{- $.Scratch.Get &amp;#34;posts&amp;#34; | jsonify -}} 按照这个模板，hugo本地预览可以打开 http://localhost:1313/index.json 查看，如果输出了一些数据如下图，说明你成功了。</description>
    </item>
    
    <item>
      <title>宝塔如何实现进程守护？</title>
      <link>/blog/70.html/</link>
      <pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/70.html/</guid>
      <description>为了方便写一些东西，pc端和手机端都可以同步，我用leanote搭建了一个在线笔记，但是必须在服务器后台运行一个指令
base run.sh 不然就访问不了端口，我也不可能时刻在终端保持指令运行，所以就需要把指令放在服务器后台，让它自己保持运行，刚好有这么一插件 Supervisor管理器 2.2 。
是一款免费的Python插件，点击下载即可，然后进入设置。
点击添加进程守护。
把进程环境目录和启动命令都填好，名称就随便写个自己能分辨出来的就行，最后点击确定。
让它一直保持启动状态就可以，其他的不用动，以后就不用打开服务器终端输入指令了，直接在浏览器访问端口，就可以访问网页。
如果为了更方便，做个反代处理即可。</description>
    </item>
    
  </channel>
</rss>
